import discord
import json
import os.path
import sqlite3
from loguru import logger
from discord.ext import commands
from config import config

class CustomCommands(commands.Cog):

    def __init__(self, bot):
        self.bot = bot
        self.connection = sqlite3.connect("database.db")
        self.cursor = self.connection.cursor()
        self.bot.logger = logger

    def get_prefix(self, cursor, message):
        cursor.execute(
            "SELECT * FROM prefixes WHERE guild_id = ?", 
            (
                message.guild.id
            )
        )
        result = cursor.fetchone()
        if result is not None:
            return result[1]
        else:
            return "+"

    @commands.has_permissions(administrator=True)
    @commands.command(aliases=['–ö–æ–º–∞–Ω–¥–∞', '–∫–æ–º–∞–Ω–¥–∞'])
    async def add_command(self, ctx, name, *, reply):
        server_id = ctx.guild
        file_path = f"custom/{server_id}.json"
        if not os.path.exists(file_path):
            my_file = open(f"custom/{server_id}.json", "w+", encoding='utf-8')
            my_file.write("{}")
            my_file.close()
        else:
            pass
        if (name is None) or (not reply):
            return
        server_id = ctx.guild
        with open(f'custom/{server_id}.json', 'r', encoding='utf-8') as json_file:
            all_commands = json.load(json_file)

        all_commands[name] = reply

        with open(f'custom/{server_id}.json', 'w', encoding='utf-8') as json_file:
            json.dump(all_commands, json_file)

        embed = discord.Embed(color=config.EMBED_COLOR, title="üíé –ö–∞—Å—Ç–æ–º–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞:", description=f"> –ö–æ–º–∞–Ω–¥–∞ `{name}` –≤–Ω–µ—Å–µ–Ω–∞ –≤ —Å–ø–∏—Å–æ–∫!")
        embed.add_field(name='üîÆ –†–µ–∞–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ –∫–æ–º–∞–Ω–¥—É: ', value=f"> {reply}")
        await ctx.reply(embed=embed, mention_author=False)

    @commands.has_permissions(administrator=True)
    @commands.command(aliases=['–£–¥–∞–ª–∫–æ–º', '—É–¥–∞–ª–∫–æ–º'])
    async def delete_command(self, ctx, name):
        server_id = ctx.guild
        file_path = f"custom/{server_id}.json"
        if not os.path.exists(file_path):
            my_file = open(f"custom/{server_id}.json", "w+", encoding='utf-8')
            my_file.write("{}")
            my_file.close()
        else:
            pass
        with open(f'custom/{server_id}.json', 'r', encoding='utf-8') as json_file:
            all_commands = json.load(json_file)

        if name not in all_commands.keys():
            embed = discord.Embed(colour=config.EMBED_COLOR_ERROR, title = '‚ùå –û—à–∏–±–∫–∞:', description = f'–ö–æ–º–∞–Ω–¥–∞ `{name}` –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!')
            await ctx.reply(embed = embed, mention_author=False)
            return

        all_commands.pop(name)
        with open(f'custom/{server_id}.json', 'w', encoding='utf-8') as json_file:
            json.dump(all_commands, json_file)

        embed = discord.Embed(colour=config.EMBED_COLOR_ERROR, title = 'üö• –ö–∞—Å—Ç–æ–º–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞:', description = f'> –ö–æ–º–∞–Ω–¥–∞ `{name}` —É–¥–∞–ª–µ–Ω–∞ –∏–∑ —Å–ø–∏—Å–∫–∞!')
        await ctx.reply(embed = embed, mention_author=False)
    
    @commands.command(aliases=['–ö–∞—Å—Ç–æ–º', '–∫–∞—Å—Ç–æ–º'])
    async def custom_commands(self, ctx):
        server_id = ctx.guild
        file_path = f"custom/{server_id}.json"
        if not os.path.exists(file_path):
            my_file = open(f"custom/{server_id}.json", "w+", encoding='utf-8')
            my_file.write("{}")
            my_file.close()
        else:
            pass
        with open(f"custom/{server_id}.json", 'r', encoding='utf-8') as json_file:
            all_servers = json.load(json_file)


        if all_servers:
            emb = discord.Embed(color=config.EMBED_COLOR, title=f"üåÇ –ö–∞—Å—Ç–æ–º–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã —Å–µ—Ä–≤–µ—Ä–∞:")
            for command in all_servers.keys():
                emb.add_field(name=command, value='**‚Äï**', inline=False)
        else:
            emb = discord.Embed(color=config.EMBED_COLOR_WHAT, title="üíõ –ù–µ—Ç, –Ω–µ—Ç, –Ω–µ—Ç!", description=f"–ù–∞ **{ctx.guild}** –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∫–∞—Å—Ç–æ–º–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã!")
        await ctx.reply(embed=emb, mention_author=False)

def setup(bot):
    bot.add_cog(CustomCommands(bot))



