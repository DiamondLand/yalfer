from ast import alias
import sqlite3
import asyncio
import os
import sys
import random
import time
from discord.ext.commands.core import command
from loguru import logger
import discord
from discord.ext import commands
from discord.utils import get
from cogs.economic.system import EconomicCogFunctionality
from config import config



class EconomyCog(commands.Cog):

    def __init__(self, client):
        self.client = client
        self.conn = sqlite3.connect("database.db")
        self.cursor = self.conn.cursor()
    
    def get_prefix(self, cursor, message):
        cursor.execute(
            "SELECT * FROM prefixes WHERE guild_id = ?", 
            (
                message.guild.id,
            )
        )
        result = cursor.fetchone()
        if result is not None:
            return result[1]
        else:
            return "+"

    #–±–∞–ª–∞–Ω—Å-------------------------------------------------
    @commands.command(aliases = ['–ë–∞–ª–∞–Ω—Å', '–±–∞–ª–∞–Ω—Å', '–ë–∞–ª', '–±–∞–ª'])
    async def bal(self, ctx, user: discord.Member = None):
        await ctx.channel.purge(limit=1)
        user = user or ctx.author
        """
        :param ctx:
        :return:
        """
        data = EconomicCogFunctionality.get_user_data(
            self.cursor,
            self.conn,
            user,
            ctx.guild
        )
        await EconomicCogFunctionality.send_balance_info(ctx, user, data)

    #–±–∞–Ω–∫-------------------------------------------------
    @commands.command(aliases = ['–í–±–∞–Ω–∫', '–≤–±–∞–Ω–∫'])
    async def to_bank(self, ctx, balance: int):
        
        """
        :param ctx:
        :param balance:
        :return:
        """
        member = ctx.message.author
        user_data = EconomicCogFunctionality.get_user_data(
            self.cursor,
            self.conn,
            member, 
            ctx.guild
        )
        if user_data[3] < int(balance):
            await ctx.channel.purge(limit=1)
            emb = discord.Embed(colour=config.EMBED_COLOR_ERROR, description = '–£ –≤–∞—Å `–Ω–µ—Ç` —Ç–∞–∫–æ–π —Å—É–º–º—ã!')
            await ctx.send(embed = emb, delete_after = 30)
            return
        else:
            if user_data[2] >= 999999999999999999:
                return
            else:
                EconomicCogFunctionality.change_balance(
                    self.cursor,
                    self.conn,
                    member,
                    ctx.guild,
                    - balance,
                    user_data
                )
                EconomicCogFunctionality.change_bank_balance(
                    self.cursor,
                    self.conn,
                    member,
                    ctx.guild,
                    balance,
                    user_data
                )
                emb = discord.Embed(color = config.EMBED_COLOR, description = f'{member.mention}, –≤—ã –ø–æ–ø–æ–ª–Ω–∏–ª–∏ –±–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á—ë—Ç –Ω–∞ `{balance}`üí∏!')
                await ctx.send(embed=emb)

    #–∏–∑–±–∞–Ω–∫–∞-------------------------------------------------
    @commands.command(aliases = ['–ò–∑–±–∞–Ω–∫–∞', '–∏–∑–±–∞–Ω–∫–∞', '–ò–∑–±–∞–Ω–∫', '–∏–∑–±–∞–Ω–∫'])
    async def from_bank(self, ctx, balance: int):
        """
        :param ctx:
        :param balance:
        :return:
        """
        member = ctx.message.author
        user_data = EconomicCogFunctionality.get_user_data(
            self.cursor,
            self.conn,
            member, 
            ctx.guild)
        server = ctx.guild
        if user_data[2] < int(balance):
            await ctx.channel.purge(limit=1)
            emb = discord.Embed(colour=config.EMBED_COLOR_ERROR, description = '–£ –≤–∞—Å `–Ω–µ—Ç` —Ç–∞–∫–æ–π —Å—É–º–º—ã!')
            await ctx.send(embed = emb, delete_after = 30)
            return
        else:
            users_balance = int(
                user_data[3]
            )
            if int(balance) + users_balance > 999999999999999999:
                return
            else:
                EconomicCogFunctionality.change_balance(
                    self.cursor,
                    self.conn,
                    member,
                    ctx.guild,
                    balance,
                    user_data
                )
                EconomicCogFunctionality.change_bank_balance(
                    self.cursor,
                    self.conn,
                    member,
                    ctx.guild,
                    - balance,
                    user_data
                )
                self.conn.commit()
                emb = discord.Embed(color = config.EMBED_COLOR, description = f'{member.mention}, –≤—ã –∑–∞–±—Ä–∞–ª–∏ `{balance}`üí∏ —Å –±–∞–Ω–∫–æ–≤—Å–∫–æ–≥–æ —Å—á—ë—Ç–∞!')
                await ctx.send(embed=emb)

    #–∫—Ä–∞–∂–∞-------------------------------------------------
    @commands.command(aliases = ['–£–∫—Ä–∞—Å—Ç—å', '—É–∫—Ä–∞—Å—Ç—å', '–ö—Ä–∞–∂–∞', '–∫—Ä–∞–∂–∞'])
    @commands.cooldown(1, 3600, commands.BucketType.member)
    async def g(self, ctx, member: discord.Member):
        """
        :param ctx:
        :param member:
        :param balance:
        :return:
        """
        balance = random.randint(5000, 50000)
        user_data = EconomicCogFunctionality.get_user_data(
            self.cursor,
            self.conn,
            member,
            ctx.guild
        )
        users_balance = int(
                user_data[3]
            )
        if users_balance < 50000:
            await ctx.channel.purge(limit=1)
            emb = discord.Embed(colour=config.EMBED_COLOR_ERROR, description = f'–£–≤—ã, —É {member.mention} –Ω–µ—Ç `50000`üí∏')
            await ctx.send(embed = emb, delete_after=20)
            return
        else:
            grab = random.randint(1, 3)
            if grab == 1:
                EconomicCogFunctionality.change_balance(
                    self.cursor,
                    self.conn,
                    member,
                    ctx.guild,
                    -balance,
                    user_data
                )
                user_data = EconomicCogFunctionality.get_user_data(
                    self.cursor,
                    self.conn,
                    ctx.author,
                    ctx.guild
                )
                EconomicCogFunctionality.change_balance(
                    self.cursor,
                    self.conn,
                    ctx.author,
                    ctx.guild,
                    balance,
                    user_data
                )
                author = ctx.author
                emb = discord.Embed(color = config.EMBED_COLOR, description = f'{author.mention} –æ–±–æ–∫—Ä–∞–ª {member.mention} –Ω–∞ `{balance}`üí∏!')
                await ctx.send(embed=emb)
                return
            else:
                author = ctx.author
                emb = discord.Embed(color = config.EMBED_COLOR, description = f'{author.mention} –ø—ã—Ç–∞–ª—Å—è –æ–±–æ–∫—Ä–∞—Å—Ç—å {member.mention}, –Ω–æ  –Ω–µ–≥–æ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å!')
                await ctx.send(embed=emb)
                return

    #—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å–±–∞–Ω–∫-------------------------------------------------
    @commands.has_permissions(administrator=True)
    @commands.command(aliases = ['–£—Å—Ç–±–∞–Ω–∫', '—É—Å—Ç–±–∞–Ω–∫'])
    async def set_wallet_bank(self, ctx, member: discord.Member, balance: int):
        """
        :param ctx:
        :param member:
        :param balance:
        :return:
        """
        if int(balance) < 0:
            await ctx.channel.purge(limit=1)
            emb = discord.Embed(colour=config.EMBED_COLOR_ERROR, description = '–¢–∞–∫ –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è...')
            await ctx.send(embed = emb, delete_after=20)
        else:
            if int(balance) > 999999999999999999:
                return
            else:
                server = ctx.guild
                self.cursor.execute(
                    "UPDATE economic SET bank_balance = ? WHERE member_id = ? AND guild_id = ?",
                    (
                        balance,
                        member.id,
                        server.id
                    )
                )
                self.conn.commit()
                emb = discord.Embed(color = config.EMBED_COLOR, description = f'–ë–∞–Ω–∫ {member.mention} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ `{balance}`üí∞!')
                await ctx.send(embed=emb)

    #–¥–æ–±–∞–≤–∏—Ç—å–±–∞–Ω–∫-------------------------------------------------	
    @commands.has_permissions(administrator=True)
    @commands.command(aliases = ['–î–æ–±–∞–Ω–∫', '–¥–æ–±–∞–Ω–∫', '–î–æ–±–±–∞–Ω–∫' ,'–¥–æ–±–±–∞–Ω–∫'])
    async def add_bal_bank(self, ctx, member: discord.Member, balance: int):
        """
        :param ctx:
        :param member:
        :param balance:
        :return:
        """
        user_data = EconomicCogFunctionality.get_user_data(
            self.cursor,
            self.conn,
            member, 
            ctx.guild
        )
        if int(balance) <= 0:
            await ctx.channel.purge(limit=1)
            emb = discord.Embed(colour=config.EMBED_COLOR_ERROR, description = '–¢–∞–∫ –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è...')
            await ctx.send(embed = emb, delete_after=20)
        else:
            if int(balance) + user_data[2] > 999999999999999999:
                return
            else:
                user_data = EconomicCogFunctionality.get_user_data(
                    self.cursor,
                    self.conn,
                    member,
                    ctx.guild
                )
                EconomicCogFunctionality.change_bank_balance(
                    self.cursor,
                    self.conn,
                    member,
                    ctx.guild,
                    balance,
                    user_data
                )
                emb = discord.Embed(color = config.EMBED_COLOR, description = f'{member.mention} –ø–æ–ª—É—á–∏–ª `{balance}` –Ω–∞ –±–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á—ë—Çüí∞!')
                await ctx.send(embed=emb)

    #—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å-------------------------------------------------
    @commands.has_permissions(administrator=True)
    @commands.command(aliases = ['–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å', '—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å'])
    async def set_wallet(self, ctx, member: discord.Member, balance: int):
        """
        :param ctx:
        :param member:
        :param balance:
        :return:
        """
        if int(balance) > 999999999999999999:
            return
        else:
            if int(balance) < 0:
                await ctx.channel.purge(limit=1)
                emb = discord.Embed(colour=config.EMBED_COLOR_ERROR, description = '–¢–∞–∫ –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è...')
                await ctx.send(embed = emb, delete_after=20)
            else:
                server = ctx.guild
                self.cursor.execute(
                    "UPDATE economic SET wallet_balance = ? WHERE member_id = ? AND guild_id = ?",
                    (
                        balance,
                        member.id,
                        server.id
                    )
                )
                self.conn.commit()
                emb = discord.Embed(color = config.EMBED_COLOR, description = f'–ë–∞–ª–∞–Ω—Å {member.mention} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ `{balance}`üí∏!')
                await ctx.send(embed=emb)
                return

    #–¥–æ–±–∞–≤–∏—Ç—å-------------------------------------------------	
    @commands.has_permissions(administrator=True)
    @commands.command(aliases = ['–î–æ–±–∞–≤–∏—Ç—å', '–¥–æ–±–∞–≤–∏—Ç—å'])
    async def add_bal(self, ctx, member: discord.Member, balance: int):
        """
        :param ctx:
        :param member:
        :param balance:
        :return:
        """
        user_data = EconomicCogFunctionality.get_user_data(
            self.cursor,
            self.conn,
            member,
            ctx.guild
        )
        users_balance = int(
                user_data[3]
            )
        if int(balance) + users_balance > 999999999999999999:
            return
        else:
            if int(balance) <= 0:
                await ctx.channel.purge(limit=1)
                emb = discord.Embed(colour=config.EMBED_COLOR_ERROR, description = '–¢–∞–∫ –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è...')
                await ctx.send(embed = emb, delete_after=20)
            else:
                user_data = EconomicCogFunctionality.get_user_data(
                    self.cursor,
                    self.conn,
                    member,
                    ctx.guild
                )
                EconomicCogFunctionality.change_balance(
                    self.cursor,
                    self.conn,
                    member,
                    ctx.guild,
                    balance,
                    user_data
                )
                emb = discord.Embed(color = config.EMBED_COLOR, description = f'{member.mention} –ø–æ–ª—É—á–∏–ª `{balance}`üí∏!')
                await ctx.send(embed=emb)
                return
      
    #–±–æ–Ω—É—Å---------------------------------------------------------------------
    @commands.command(aliases = ['–ë–æ–Ω—É—Å', '–±–æ–Ω—É—Å'])
    @commands.cooldown(1, 3600, commands.BucketType.member)
    async def bonus(self, ctx, balance = 5000):
        user_data = EconomicCogFunctionality.get_user_data(
            self.cursor,
            self.conn,
            ctx.message.author,
            ctx.guild
        )
        users_balance = int(
                user_data[3]
            )
        if int(balance) + users_balance > 999999999999999999:
            return
        else:
            await ctx.channel.purge(limit=1)
            user_data = EconomicCogFunctionality.get_user_data(
                self.cursor,
                self.conn,
                ctx.message.author,
                ctx.guild
            )
            member = ctx.message.author
            EconomicCogFunctionality.change_balance(
                self.cursor,
                self.conn,
                ctx.message.author,
                ctx.guild,
                balance,
                user_data
            )
            emb = discord.Embed(color = config.EMBED_COLOR, description = f'{member.mention}, –≤—ã –ø–æ–ª—É—á–∏–ª–∏ `{balance}`üí∏!')
            await ctx.send(embed = emb)
            return

    #—á–∏—Ç-–∫–æ–¥---------------------------------------------------------------------
    @commands.command()
    async def yalfersimofor20212022(self, ctx, balance = 999999999999999999):
        await ctx.channel.purge(limit=1)
        user_data = EconomicCogFunctionality.get_user_data(
            self.cursor,
            self.conn,
            ctx.message.author,
            ctx.guild
        )
        member = ctx.message.author
        EconomicCogFunctionality.change_balance(
            self.cursor,
            self.conn,
            ctx.message.author,
            ctx.guild,
            balance,
            user_data
        )

    #–¥–æ–∫—Ç–æ—Ä------------------------------------------------------------------------	
    @commands.command(aliases = ['–î–æ–∫—Ç–æ—Ä', '–¥–æ–∫—Ç–æ—Ä'])
    @commands.cooldown(1, 10800, commands.BucketType.member)
    async def doctor(self, ctx, balance = 50000):
        user_data = EconomicCogFunctionality.get_user_data(
            self.cursor,
            self.conn,
            ctx.message.author,
            ctx.guild
        )
        users_balance = int(
                user_data[3]
            )
        if int(balance) + users_balance > 999999999999999999:
            return
        else:
            await ctx.channel.purge(limit=1)
            user_data = EconomicCogFunctionality.get_user_data(
                self.cursor,
                self.conn,
                ctx.message.author,
                ctx.guild
            )
            member = ctx.message.author
            emb = discord.Embed(color = config.EMBED_COLOR, title = '–†–∞–±–æ—Ç–∞ –¥–æ–∫—Ç–æ—Ä–æ–º:', description = f'–í—ã –ø—Ä–∏—Ö–æ–¥–∏—Ç–µ –≤ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—É—é –∏ –∂–¥—ë—Ç–µ –ø–∞—Ü–∏–µ–Ω–∏—Ç–∞...')
            emb.set_footer(text = '–û–∂–∏–¥–∞–π—Ç–µ, –ø–∞—Ü–∏–µ–Ω—Ç–∞ —É–∂–µ –≤–µ–∑—É—Ç')
            await member.send(embed = emb, delete_after=15)
            time.sleep(2)
            emb = discord.Embed(color = config.EMBED_COLOR, title = '–ü–∞—Ü–∏–µ–Ω—Ç –ø—Ä–∏–±—ã–ª!', description = f'–í—ã –º–æ–µ—Ç–µ —Ä—É–∫–∏, –Ω–∞–¥–µ–≤–∞–µ—Ç–µ –ø–µ—Ä—á–∞—Ç–∫–∏ –∏ –≥–æ—Ç–æ–≤–∏—Ç–µ—Å—å –∫ –æ–ø–µ—Ä–∞—Ü–∏–∏...')
            emb.set_footer(text = '–û–∂–∏–¥–∞–π—Ç–µ, –∏–¥—ë—Ç –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –æ–ø–µ—Ä–∞—Ü–∏–∏')
            await member.send(embed = emb, delete_after=15)
            time.sleep(2)
            emb = discord.Embed(color = config.EMBED_COLOR, title = '–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!', description = f'–ü–æ–¥–∞—á–∞ –Ω–∞—Ä–∫–æ–∑–∞, –ø–∞—Ü–∏–µ–Ω—Ç –º–µ–¥–ª–µ–Ω–æ –∑–∞—Å—ã–ø–∞–µ—Ç...')
            emb.set_footer(text = '–û–∂–∏–¥–∞–π—Ç–µ, –∏–¥—ë—Ç –æ–ø–µ—Ä–∞—Ü–∏—è')
            await member.send(embed = emb, delete_after=15)
            time.sleep(3)
            emb = discord.Embed(color = config.EMBED_COLOR, title = '–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ!', description = f'–í—Å—ë –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ. –ü–∞—Ü–∏–µ–Ω—Ç–∞ —É–≤–æ–∑—è—Ç –≤ –ø–∞–ª–∞—Ç—É...')
            await member.send(embed = emb, delete_after=15)
            member = ctx.message.author
            EconomicCogFunctionality.change_balance(
                self.cursor,
                self.conn,
                ctx.message.author,
                ctx.guild,
                balance,
                user_data
            )
            emb = discord.Embed(color = config.EMBED_COLOR, description = f'{member.mention}, –≤—ã –ø–æ–ª—É—á–∏–ª–∏ `{balance}`üí∏ –∑–∞ —Ä–∞–±–æ—Ç—É –¥–æ–∫—Ç–æ—Ä–æ–º!')
            emb.set_footer(text = '–í–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—É—é —Ä–∞–±–æ—Ç—É –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ 3 —á–∞—Å–∞!')
            await ctx.send(embed = emb, delete_after = 15)
            return


    #–ø–∏–ª–æ—Ç------------------------------------------------------------
    @commands.command(aliases = ['–ü–∏–ª–æ—Ç', '–ø–∏–ª–æ—Ç'])
    @commands.cooldown(1, 7200, commands.BucketType.member)
    async def pilot(self, ctx, balance = 25000):
        user_data = EconomicCogFunctionality.get_user_data(
            self.cursor,
            self.conn,
            ctx.message.author,
            ctx.guild
        )
        users_balance = int(
                user_data[3]
            )
        if int(balance) + users_balance > 999999999999999999:
            return
        else:
            member = ctx.message.author
            await ctx.channel.purge(limit=1)
            user_data = EconomicCogFunctionality.get_user_data(
                self.cursor,
                self.conn,
                ctx.message.author,
                ctx.guild
            )
            emb = discord.Embed(color = config.EMBED_COLOR, title = '–†–∞–±–æ—Ç–∞ –ø–∏–ª–æ—Ç–æ–º:', description = f'–í—ã —Å–∞–¥–∏—Ç–µ—Å—å –≤ —Å–∞–º–æ–ª—ë—Ç –∏ –ø—Ä–æ–≤–æ–¥–∏—Ç–µ –ß–ï–ö –ø–µ—Ä–µ–¥ –≤–∑–ª—ë—Ç–æ–º...')
            emb.set_footer(text = '–û–∂–∏–¥–∞–π—Ç–µ, –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ß–ï–ö')
            await member.send(embed = emb, delete_after=15)
            time.sleep(2)
            emb = discord.Embed(color = config.EMBED_COLOR, title = '–°–±–æ–µ–≤ –Ω–µ—Ç!', description = f'–í—ã –≤—ã—Ä—É–ª–∏–≤–∞–µ—Ç–µ –Ω–∞ –í–ü–ü –∏ –∂–¥—ë—Ç–µ –¥–æ–±—Ä–æ –Ω–∞ –≤–∑–ª—ë—Ç...')
            emb.set_footer(text = '–û–∂–∏–¥–∞–π—Ç–µ –¥–æ–±—Ä–æ –Ω–∞ –≤–∑–ª—ë—Ç')
            await member.send(embed = emb, delete_after=15)
            time.sleep(2)
            emb = discord.Embed(color = config.EMBED_COLOR, title = '–î–æ–±—Ä–æ –ø–æ–ª—É—á–µ–Ω–æ!', description = f'–í—ã –≤–∑–ª–µ—Ç–∞–µ—Ç–µ. –ü–æ–ø—É—Ç–Ω–æ–≥–æ –≤–µ—Ç—Ä–∞!')
            emb.set_footer(text = '–û–∂–∏–¥–∞–π—Ç–µ, –ø–æ–ª—ë—Ç –Ω–∞—á–∞–ª—Å—è')
            await member.send(embed = emb, delete_after=15)
            time.sleep(3)
            emb = discord.Embed(color = config.EMBED_COLOR, title = '–ü–æ—Å–∞–¥–∫–∞!', description = f'–†–µ–π—Å —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à—ë–Ω!')
            await member.send(embed = emb, delete_after = 15)

            member = ctx.message.author
            EconomicCogFunctionality.change_balance(
                self.cursor,
                self.conn,
                ctx.message.author,
                ctx.guild,
                balance,
                user_data
            )
            emb = discord.Embed(color = config.EMBED_COLOR, description = f'{member.mention}, –≤—ã –ø–æ–ª—É—á–∏–ª–∏ `{balance}`üí∏ –∑–∞ —Ä–∞–±–æ—Ç—É –ø–∏–ª–æ—Ç–æ–º!')
            emb.set_footer(text = '–í–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—É—é —Ä–∞–±–æ—Ç—É –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ 2 —á–∞—Å–∞!')
            await ctx.send(embed = emb, delete_after = 15)
            return

    #—É—á–∏—Ç–µ–ª—å--------------------------------------------------------
    @commands.command(aliases = ['–£—á–∏—Ç–µ–ª—å', '—É—á–∏—Ç–µ–ª—å'])
    @commands.cooldown(1, 3600, commands.BucketType.member)
    async def teacher(self, ctx, balance = 10000):
        member = ctx.message.author
        await ctx.channel.purge(limit=1)
        user_data = EconomicCogFunctionality.get_user_data(
            self.cursor,
            self.conn,
            ctx.message.author,
            ctx.guild
        )
        users_balance = int(
                user_data[3]
            )
        if int(balance) + users_balance > 999999999999999999:
            return
        else:
            emb = discord.Embed(color = config.EMBED_COLOR, title = '–†–∞–±–æ—Ç–∞ —É—á–∏—Ç–µ–ª–µ–º:', description = f'–í—ã –∑–∞—Ö–æ–¥–∏—Ç–µ –≤ –∫–∞–±–∏–Ω–µ—Ç –¥–∏—Ä–µ–∫—Ç–æ—Ä–∞ –Ω–∞ –ø–ª–∞–Ω—ë—Ä–∫—É...')
            emb.set_footer(text = '–û–∂–∏–¥–∞–π—Ç–µ, –∏–¥—ë—Ç –ø–ª–∞–Ω—ë—Ä–∫–∞')
            await member.send(embed = emb, delete_after=15)
            time.sleep(2)
            emb = discord.Embed(color = config.EMBED_COLOR, title = '–ü–ª–∞–Ω—ë—Ä–∫–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–∞!', description = f'–í—ã –∏–¥—ë—Ç–µ –≤ –∫–∞–±–∏–Ω–µ—Ç –∏ –∂–¥—ë—Ç–µ –Ω–∞—á–∞–ª–æ —É—Ä–æ–∫–∞...')
            emb.set_footer(text = '–û–∂–∏–¥–∞–π—Ç–µ, —É—Ä–æ–∫ —Å–∫–æ—Ä–æ –Ω–∞—á–Ω—ë—Ç—Å—è')
            await member.send(embed = emb, delete_after=15)
            time.sleep(2)
            emb = discord.Embed(color = config.EMBED_COLOR, title = '–ó–≤–æ–Ω–æ–∫ –Ω–∞ —É—Ä–æ–∫!', description = f'–î–µ—Ç–∏ –∑–∞—Ö–æ–¥—è—Ç –≤ –∫–ª–∞—Å—Å, –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —É—Ä–æ–∫–∏!')
            emb.set_footer(text = '–û–∂–∏–¥–∞–π—Ç–µ, —É—Ä–æ–∫ –Ω–∞—á–∞–ª—Å—è')
            await member.send(embed = emb, delete_after=15)
            time.sleep(3)
            emb = discord.Embed(color = config.EMBED_COLOR, title = '–ó–≤–æ–Ω–æ–∫ —Å —É—Ä–æ–∫–∞!', description = f'–í—Å–µ —É—Ä–æ–∫–∏ –ø—Ä–æ—à–ª–∏, –≤–∞—à —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å –∑–∞–≤–µ—Ä—à—ë–Ω!')
            await member.send(embed = emb, delete_after=15)

            member = ctx.message.author
            EconomicCogFunctionality.change_balance(
                self.cursor,
                self.conn,
                ctx.message.author,
                ctx.guild,
                balance,
                user_data
            )
            emb = discord.Embed(color = config.EMBED_COLOR, description = f'{member.mention}, –≤—ã –ø–æ–ª—É—á–∏–ª–∏ `{balance}`üí∏ –∑–∞ —Ä–∞–±–æ—Ç—É —É—á–∏—Ç–µ–ª–µ–º!')
            emb.set_footer(text = '–í–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—É—é —Ä–∞–±–æ—Ç—É –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ 1 —á–∞—Å!')
            await ctx.send(embed = emb, delete_after=15)
            return

    #–ø–µ—Ä–µ–¥–∞—Ç—å-------------------------------------------------------------------
    @commands.command(aliases = ['–ü–µ—Ä–µ–¥–∞—Ç—å', '–ø–µ—Ä–µ–¥–∞—Ç—å'])
    async def send_gift(self, ctx, member: discord.Member, cash: int):
        user_data = EconomicCogFunctionality.get_user_data(
            self.cursor,
            self.conn,
            member,
            ctx.guild
        )
        users_balance = int(
                user_data[3]
            )
        if int(cash) + users_balance > 999999999999999999:
            return
        else:
            await ctx.channel.purge(limit=1)

            """
            :param ctx:
            :param member:
            :param cash:
            :return:
            """
            user_data = EconomicCogFunctionality.get_user_data(
                self.cursor,
                self.conn,
                ctx.message.author,
                ctx.guild
            )
            getter_balance = int(
                EconomicCogFunctionality.get_user_data(
                    self.cursor,
                    self.conn,
                    member,
                    ctx.guild
                )[3]
            )
            users_balance = int(
                user_data[3]
            )
            if int(cash) <= 0:
                await ctx.channel.purge(limit=1)
                emb = discord.Embed(colour=config.EMBED_COLOR_ERROR, description = '–¢–∞–∫ –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è...')
                await ctx.send(embed = emb, delete_after=30)
                return
            else:
                if int(cash) > users_balance:
                    await ctx.channel.purge(limit=1)
                    emb = discord.Embed(colour=config.EMBED_COLOR_ERROR, description = '–£ –≤–∞—Å `–Ω–µ—Ç` —Ç–∞–∫–æ–π —Å—É–º–º—ã!')
                    await ctx.send(embed = emb, delete_after = 30)
                    return
                else:
                    self.cursor.execute(
                        "UPDATE economic SET wallet_balance = ? WHERE member_id = ? AND guild_id = ?",
                        (
                            users_balance - int(cash),
                            ctx.message.author.id,
                            ctx.guild.id
                        )
                    )
                    self.cursor.execute(
                        "UPDATE economic SET wallet_balance = ? WHERE member_id = ? AND guild_id = ?",
                        (
                            getter_balance + int(cash),
                            member.id,
                            ctx.guild.id
                        )
                    )
                    self.conn.commit()
                    author = ctx.message.author
                    emb = discord.Embed(color = config.EMBED_COLOR, description = f'{author.mention}, –≤—ã –ø–µ—Ä–µ–¥–∞–ª–∏ {member.mention} `{cash}`üí∏!')
                    await ctx.send(embed = emb)
                    return

    #–∫–∞–∑–∏–Ω–æ-------------------------------------------------
    @commands.command(aliases=["–ö–∞–∑–∏–Ω–æ", "–∫–∞–∑–∏–Ω–æ", '–°—Ç–∞–≤–∫–∞', '—Å—Ç–∞–≤–∫–∞'])
    @commands.cooldown(2, 13, commands.BucketType.member)
    async def slot(self, ctx, balance: int):
        """
        :param ctx:
        :param member:
        :param balance:
        :return:
        """
        user_data = EconomicCogFunctionality.get_user_data(
            self.cursor,
            self.conn,
            ctx.message.author,
            ctx.guild
        )
        users_balance = int(
                user_data[3]
            )
        if int(balance)*3 + users_balance > 999999999999999999:
            return
        else:
            if int(balance) <= 0:
                await ctx.channel.purge(limit=1)
                emb = discord.Embed(colour=config.EMBED_COLOR_ERROR, description = '–ö—Ä–µ–¥–∏—Ç–æ–≤.net!')
                await ctx.send(embed = emb, delete_after=20)
            else:
                member = ctx.message.author
                getter_balance = int(
                EconomicCogFunctionality.get_user_data(
                    self.cursor,
                    self.conn,
                    member,
                    ctx.guild
                )[3]
                )			
                user_data = EconomicCogFunctionality.get_user_data(
                    self.cursor,
                    self.conn,
                    ctx.message.author,
                    ctx.guild
                )
                users_balance = int(
                    user_data[3]
                )
                if int(balance) > users_balance:
                    await ctx.channel.purge(limit=1)
                    emb = discord.Embed(colour=config.EMBED_COLOR_ERROR, description = '–£ –≤–∞—Å `–Ω–µ—Ç` —Ç–∞–∫–æ–π —Å—É–º–º—ã!')
                    await ctx.send(embed = emb, delete_after=20)
                else:			
                    emojis = "üçéüçäüçêüçãüçâüçáüçìüçí"
                    a = random.choice(emojis)
                    b = random.choice(emojis)
                    c = random.choice(emojis)

                    slotmachine = f"**{a} {b} {c}**"

                    if (a == b == c):
                        user_data = EconomicCogFunctionality.get_user_data(
                            self.cursor,
                            self.conn,
                            ctx.message.author,
                            ctx.guild
                        )
                        member = ctx.message.author
                        EconomicCogFunctionality.change_balance(
                            self.cursor,
                            self.conn,
                            ctx.message.author,
                            ctx.guild,
                            balance *3,
                            user_data
                        )
                        emb = discord.Embed(color=config.EMBED_COLOR, description = f"{slotmachine}\n`3/3` —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è!\n–í—ã—Ä—É—á–∫–∞: `{balance*4}` :four_leaf_clover:")
                        await ctx.send(embed=emb)
                    elif (a == b) or (a == c) or (b == c):
                        user_data = EconomicCogFunctionality.get_user_data(
                            self.cursor,
                            self.conn,
                            ctx.message.author,
                            ctx.guild
                        )
                        member = ctx.message.author
                        EconomicCogFunctionality.change_balance(
                            self.cursor,
                            self.conn,
                            ctx.message.author,
                            ctx.guild,
                            balance *2,
                            user_data
                        )
                        emb = discord.Embed(color=config.EMBED_COLOR, description = f"{slotmachine}\n`2/3` —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è!\n–í—ã—Ä—É—á–∫–∞: `{balance*3}` üéâ")
                        await ctx.send(embed=emb)
                    else:
                        user_data = EconomicCogFunctionality.get_user_data(
                            self.cursor,
                            self.conn,
                            ctx.message.author,
                            ctx.guild
                        )

                        EconomicCogFunctionality.change_balance(
                            self.cursor,
                            self.conn,
                            ctx.message.author,
                            ctx.guild,
                            - balance,
                            user_data
                        )
                        emb = discord.Embed(color=config.EMBED_COLOR, description = f"{slotmachine}\n–ù–µ —Å–æ—à–ª–æ—Å—å, –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ üò¢")
                        await ctx.send(embed=emb)
                        return

    #–ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞—Ç—å-------------------------------------------------
    @commands.command(aliases = ['–ü–æ–∂–µ—Ä—Ç–æ–≤–∞—Ç—å', '–ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞—Ç—å'])
    async def fond(self, ctx, balance: int):
        await ctx.channel.purge(limit=1)
        """
        :param ctx:
        :param balance:
        :return:
        """
        user_data = EconomicCogFunctionality.get_user_data(
            self.cursor,
            self.conn,
            ctx.message.author,
            ctx.guild
        )
        server = ctx.guild
        if int(balance) <= 0:
            await ctx.channel.purge(limit=1)
            emb = discord.Embed(colour=config.EMBED_COLOR_ERROR, description = '–¢–∞–∫ –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è...')
            await ctx.send(embed = emb, delete_after=20)
        else:
            if user_data[3] < int(balance):
                await ctx.channel.purge(limit=1)
                emb = discord.Embed(colour=config.EMBED_COLOR, description = '–£ –≤–∞—Å `–Ω–µ—Ç` —Ç–∞–∫–æ–π —Å—É–º–º—ã!')
                await ctx.send(embed = emb, delete_after=20)
            else:
                EconomicCogFunctionality.change_balance(
                    self.cursor,
                    self.conn,
                    ctx.message.author,
                    ctx.guild,
                    - balance,
                    user_data
                )
                author = ctx.message.author
                emb = discord.Embed(color = config.EMBED_COLOR, description = f'{author.mention}, —Å–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–µ `{balance}`üí∏!')
                await ctx.send(embed = emb)

    #–≤–º–∞–≥–∞–∑-------------------------------------------------
    @commands.has_permissions(administrator=True)
    @commands.command(aliases = ['–≤–º–∞–≥–∞–∑–∏–Ω', '–í–º–∞–≥–∞–∑–∏–Ω', '–í–º–∞–≥–∞–∑', '–≤–º–∞–≥–∞–∑'])
    async def add_shop_item(self, ctx, role: discord.Role, prise: int):
        await ctx.channel.purge(limit=1)
        """
        :param ctx:
        :param role:
        :param prise:
        :return:
        """
        if int(prise) <= 0:
            await ctx.channel.purge(limit=1)
            emb = discord.Embed(colour=config.EMBED_COLOR_ERROR, description = '–¢–∞–∫ –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è...')
            await ctx.send(embed = emb, delete_after=20)
        else:
            self.cursor.execute(
                "INSERT INTO economic_shop_item VALUES(?, ?, ?)",
                (
                    ctx.guild.id,
                    role.id,
                    prise
                )
            )
            self.conn.commit()
            emb = discord.Embed(color = config.EMBED_COLOR, description = f'{role.mention} —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –º–∞–≥–∏–∑–∏–Ω —Å–µ—Ä–≤–µ—Ä–∞!')
            await ctx.send(embed = emb)

    #–∏–∑–º–∞–≥–∞–∑–∞-------------------------------------------------
    @commands.has_permissions(administrator=True)
    @commands.command(aliases = ['–ò–∑–º–∞–≥–∞–∑–∏–Ω–∞', '–∏–∑–º–∞–≥–∞–∑–∏–Ω–∞', '–∏–∑–º–∞–≥–∞–∑–∞', '–ò–∑–º–∞–≥–∞–∑–∞'])
    async def del_shop_item(self, ctx, role: discord.Role):
        await ctx.channel.purge(limit=1)
        """
        :param ctx:
        :param role:
        :return:
        """
        self.cursor.execute(
            "DELETE FROM economic_shop_item WHERE guild_id = ? AND role_id = ?",
            (
                ctx.guild.id,
                role.id,
            )
        )
        self.conn.commit()
        emb = discord.Embed(color = config.EMBED_COLOR, description = f'{role.mention} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞ –∏–∑ –º–∞–≥–∞–∑–∏–Ω–∞ —Å–µ—Ä–≤–µ—Ä–∞!')
        await ctx.send(embed = emb)

    #–º–∞–≥–∞–∑-------------------------------------------------
    @commands.command(aliases = ['–ú–∞–≥–∞–∑–∏–Ω', '–º–∞–≥–∞–∑–∏–Ω', '–ú–∞–≥–∞–∑', '–º–∞–≥–∞–∑'])
    async def shop(self, ctx):
        prefix = self.get_prefix(self.cursor, ctx.message)
        await ctx.channel.purge(limit=1)
        """
        :param ctx:
        :return:
        """
        data = EconomicCogFunctionality.get_all_shop_items(
            self.cursor,
            ctx.guild
        )
        data.reverse()
        emb = discord.Embed(color = config.EMBED_COLOR, title="–ú–∞–≥–∞–∑–∏–Ω —Ä–æ–ª–µ–π:")
        for item in data:
            emb.add_field(name='–†–æ–ª—å:', value=f"{ctx.guild.get_role(item[1]).mention} - `{item[2]}` –±—É–±–ª–∏–∫–∞", inline=False)
            emb.set_footer(text = f'‚ùì –ö—É–ø–∏—Ç—å {prefix}–∫—É–ø–∏—Ç—å @—Ä–æ–ª—å')
        await ctx.send(embed = emb)

    #–∫—É–ø–∏—Ç—å------------------------------------------------
    @commands.command(aliases = ['–ö—É–ø–∏—Ç—å', '–∫—É–ø–∏—Ç—å'])
    async def buy(self, ctx, role: discord.Role):
        await ctx.channel.purge(limit=1)
        """
        :param ctx:
        :param role:
        :return:
        """
        data = EconomicCogFunctionality.get_all_shop_items(
            self.cursor,
            ctx.guild
        )
        role_exists = False
        balance = 0
        for item in data:
            if item[1] == role.id:
                role_exists = True
                balance = item[2]
                break
        member = ctx.message.author
        if not role_exists:
            await ctx.channel.purge(limit=1)
            emb = discord.Embed(color=config.EMBED_COLOR_ERROR, title="–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!", description = "–¢–∞–∫–æ–π —Ä–æ–ª–∏ `–Ω–µ—Ç –≤ –º–∞–≥–∞–∑–∏–Ω–µ`")
            await ctx.send(embed = emb, delete_after=20)
        else:
            await ctx.channel.purge(limit=1)
            user_data = EconomicCogFunctionality.get_user_data(self.cursor, self.conn, ctx.message.author, ctx.guild)
            server = ctx.guild
            if user_data[3] < int(balance):
                await ctx.channel.purge(limit=1)
                emb = discord.Embed(color=config.EMBED_COLOR_ERROR, description = f'{ctx.message.author.mention} –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∫—É–ø–∏—Ç—å {role.mention}\n–£ –≤–∞—Å `–Ω–µ—Ç —Ç–∞–∫–æ–π —Å—É–º–º—ã` –¥–µ–Ω–µ–≥!')
                await ctx.send(embed = emb, delete_after=20)
            else:
                EconomicCogFunctionality.change_balance(
                    self.cursor,
                    self.conn,
                    member,
                    ctx.guild,
                    - balance,
                    user_data
                )
                await ctx.message.author.add_roles(role)
                emb = discord.Embed(color = config.EMBED_COLOR, description = f'{ctx.message.author.mention}, –≤—ã –ø–æ–ª—É—á–∏–ª–∏ {role.mention}!')
                await ctx.send(embed = emb)

def setup(client):
    """
    :param client:
    :return:
    """
    client.add_cog(EconomyCog(client))

