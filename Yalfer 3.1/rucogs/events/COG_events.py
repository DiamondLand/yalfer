
from selectors import EVENT_READ
import discord
import error_send
import sqlite3
from loguru import logger
from config import config
from discord.ext import commands
from discord_components import DiscordComponents
from rucogs.events.system import EventsCogFunctionality

class Events(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.connection = sqlite3.connect("database.db")
        self.cursor = self.connection.cursor()
        self.bot.logger = logger

    def get_prefix(self, cursor, message):
        cursor.execute(
            "SELECT * FROM prefixes WHERE guild_id = ?", 
            (
                message.guild.id
            )
        )
        result = cursor.fetchone()
        if result is not None:
            return result[1]
        else:
            return "+"

    @commands.Cog.listener()
    async def on_ready(self):
        logger.info(f"Hi, {config.DEVELOPER}!")
        DiscordComponents(self.bot)
        await self.bot.change_presence(status=discord.Status.online, activity=discord.Activity(type=discord.ActivityType.playing, name=f"+—Ö–µ–ª–ø || +–∏–Ω–≤–∞–π—Ç"))

    @commands.Cog.listener()
    async def on_guild_join(self, guild):
        join_msg = f'üëã –ü—Ä–∏–≤–µ—Ç-–ø—Ä–∏–≤–µ—Ç! –°–ø–∞—Å–∏–±–æ –∑–∞ –≤—ã–±–æ—Ä *{config.NAME}*!\
        \n\
        \n**{config.NAME}** - –ø–æ–ª–Ω–æ—Å—Ç—å—é –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∏ –º–Ω–æ–≥–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –±–æ—Ç, –≤–∫–ª—é—á–∞—é—â–∏–π –≤ —Å–µ–±—è –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω—ã–µ, —Ç–∞–∫ –∏ –Ω–µ—Ñ–æ—Ä–º–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:\
        \n\
        \n‚Ä¢ –í–µ—Å–µ–ª—å–µ\
        \n‚Ä¢ –≠–∫–æ–Ω–æ–º–∏–∫–∞\
        \n‚Ä¢ –ú–∞–π–Ω–∏–Ω–≥\
        \n‚Ä¢ –ú—É–∑—ã–∫–∞\
        \n‚Ä¢ –£—Ç–∏–ª–∏—Ç—ã\
        \n‚Ä¢ –ú–æ–¥–µ—Ä–∞—Ü–∏—è\
        \n\
        \n–í—ã –º–æ–∂–µ—Ç–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –Ω–∏–º–∏ –ø–æ –∫–æ–º–∞–Ω–¥–µ `+—Ö–µ–ª–ø`.'
        to_send = next((
            chan for chan in sorted(guild.channels, key=lambda x: x.position)
            if chan.permissions_for(guild.me).send_messages and isinstance(chan, discord.TextChannel)
        ), None)

        if to_send:
            embed = discord.Embed(color=config.EMBED_COLOR, description = join_msg) 
            await  to_send.send(embed=embed)

    @commands.Cog.listener()
    async def on_message(self, message):
        if message.author.bot:
            return

        '''
        mention = f'<@!{config.NAME}{config.TAG}>'
        if mention in message.content:
            prefix = self.get_prefix(self.cursor, message.message)
            try:
                embed = discord.Embed(color=config.EMBED_COLOR, title = 'üëã –ü—Ä–∏–≤–µ—Ç-–ø—Ä–∏–≤–µ—Ç!', description = f'> –ú–æ–π –ø—Ä–µ—Ñ–∏–∫—Å –Ω–∞ –¥–∞–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ: `{prefix}`\
                \n> –ö–æ–º–∞–Ω–¥–∞ –ø–æ–º–æ—â–∏: `{prefix}—Ö–µ–ª–ø`') 
                await message.channel.send(embed=embed)
            except discord.Forbidden:
                pass
        '''
'''    
    @commands.has_permissions(administrator=True)
    @commands.command(aliases = ['–î–æ–±–∞–≤–∏—Ç—å—Ä–æ–ª—å', '–¥–æ–±–∞–≤–∏—Ç—å—Ä–æ–ª—å'])
    async def add_role(self, ctx, role: discord.Role):
        """
        :param ctx:
        :param role:
        :return:
        """
        self.cursor.execute(
            "INSERT INTO server_for_members VALUES(?, ?)",
            (
                ctx.guild.id,
                role.id,
            )
        )
        self.connection.commit()
        emb = discord.Embed(color = config.EMBED_COLOR, title=f'–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–∞—è —Ä–æ–ª—å:', description = f'üíñ {role.mention} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∫–∞–∫ —Ä–æ–ª—å –¥–ª—è –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤!')
        await ctx.reply(embed = emb, mention_author=False)
    
    @commands.has_permissions(administrator=True)
    @commands.command(aliases = ['–£–±—Ä–∞—Ç—å—Ä–æ–ª—å', '—É–±—Ä–∞—Ç—å—Ä–æ–ª—å'])
    async def dell_role(self, ctx, role: discord.Role):
        """
        :param ctx:
        :param role:
        :return:
        """
        self.cursor.execute(
            "DELETE FROM server_for_members WHERE guild_id = ? AND role_id = ?",
            (
                ctx.guild.id,
                role.id,
            )
        )
        self.connection.commit()
        emb = discord.Embed(color = config.EMBED_COLOR, title=f'–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–∞—è —Ä–æ–ª—å:', description = f'üíî {role.mention} –±–æ–ª—å—à–µ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Ä–æ–ª—å—é –¥–ª—è –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤!')
        await ctx.reply(embed = emb, mention_author=False)
    
    @commands.command(aliases = ['–†–æ–ª–∏', '—Ä–æ–ª–∏'])
    async def roles(self, ctx):
        """
        :param ctx:
        :return:
        """
        data = EventsCogFunctionality.get_all_items(
            self.cursor,
            ctx.guild
        )
        data.reverse()
        emb = discord.Embed(color = config.EMBED_COLOR, title="–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ä–æ–ª–∏:")
        for item in data:
            emb.add_field(name=f'–†–æ–ª—å –¥–ª—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–π:', value=f"{ctx.guild.get_role(item[1]).mention}", inline=False)
        await ctx.send(embed = emb)
  
    @commands.Cog.listener()
    async def on_member_join(self, guild, member):
        role = item[1]
        data = EventsCogFunctionality.get_all_items(
            self.cursor,
            guild
        )
        for item in data:
            if item[1] == role.id:
                break
        join_member_msg = f'üçß {member.mention} –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ {guild}!\
        \n–ù–∞ —Å–µ—Ä–≤–µ—Ä–µ: `{guild.member_count}`\
        \n–í—ã–¥–∞–Ω–∞ —Ä–æ–ª—å: {role.mention}'
        to_send = next((
            chan for chan in sorted(guild.channels, key=lambda x: x.position)
            if chan.permissions_for(guild.me).send_messages and isinstance(chan, discord.TextChannel)
        ), None)

        if to_send:
            embed = discord.Embed(color=config.EMBED_COLOR, description = join_member_msg) 
            await  to_send.send(embed=embed)
            await member.add_roles(role)
'''        
#<<------------->>
def setup(bot):
    """
    :param bot:
    :return:
    """
    bot.add_cog(Events(bot))