import discord
import sqlite3
import asyncio
import datetime
import json
import os
from config import config
from discord.ext import commands

class Warns(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.connection = sqlite3.connect("database.db", timeout=10)
        self.cursor = self.connection.cursor()

    def get_prefix(self, cursor, message):
        cursor.execute(
            "SELECT * FROM prefixes WHERE guild_id = ?", 
            (
                message.guild.id
            )
        )
        result = cursor.fetchone()
        if result is not None:
            return result[1]
        else:
            return "+"

    @commands.has_permissions(manage_messages=True)
    @commands.command(aliases = ['–í–∞—Ä–Ω', '–≤–∞—Ä–Ω', '–ü—Ä–µ–¥', '–ø—Ä–µ–¥'])
    async def warn(self, ctx, user: discord.Member = None, *, reason='–ù–µ —É–∫–∞–∑–∞–Ω–∞'):
        server_id = ctx.guild
        file_path = f"warnings/{server_id}.json"
        if not os.path.exists(file_path):
            my_file = open(f"warnings/{server_id}.json", "w+", encoding='utf-8')
            my_file.write("{}")
            my_file.close()
        else:
            pass

        with open(f"warnings/{server_id}.json", 'r') as json_file:
            all_users = json.load(json_file)

        if str(user.id) not in all_users.keys():
            all_users[str(user.id)] = [reason]
        else:
            user_warnings = all_users[str(user.id)]
            user_warnings.append(reason)

        with open(f"warnings/{server_id}.json", 'w') as json_file:
            json.dump(all_users, json_file)

        embed = discord.Embed(colour=config.EMBED_COLOR, title=f'üö® –í–∞—Ä–Ω:', description = f'{user.mention} –ø–æ–ª—É—á–∞–µ—Ç –≤–∞—Ä–Ω!\
        \n> –ü—Ä–∏—á–∏–Ω–∞: **{reason}**!')
        date = datetime.datetime.today()
        embed.set_footer(icon_url = ctx.author.avatar_url, text=f'{date.strftime("%D")} ‚Ä¢ {date.strftime("%H:%M")}')
        embed.set_thumbnail(url=user.avatar_url)
        await ctx.reply(embed=embed, mention_author=False)

        embed = discord.Embed(colour=config.EMBED_COLOR, title=f'üö® –í–∞—Ä–Ω:', description = f'–í—ã –ø–æ–ª—É—á–∏–ª–∏ –≤–∞—Ä–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ **{ctx.guild}**!\
        \n> –ü—Ä–∏—á–∏–Ω–∞: **{reason}**!')
        date = datetime.datetime.today()
        embed.set_footer(icon_url = ctx.author.avatar_url, text=f'{date.strftime("%D")} ‚Ä¢ {date.strftime("%H:%M")}')
        embed.set_thumbnail(url=user.avatar_url)
        await user.send(embed=embed)


    @commands.has_permissions(manage_messages=True)
    @commands.command(aliases = ['–í–∞—Ä–Ω—ã', '–≤–∞—Ä–Ω—ã', '–ü—Ä–µ–¥—ã', '–ø—Ä–µ–¥—ã'])
    async def warns(self, ctx, user: discord.Member = None):
        server_id = ctx.guild
        file_path = f"warnings/{server_id}.json"
        if not os.path.exists(file_path):
            my_file = open(f"warnings/{server_id}.json", "w+", encoding='utf-8')
            my_file.write("{}")
            my_file.close()
        else:
            pass

        with open(f"warnings/{server_id}.json", 'r') as json_file:
            all_users = json.load(json_file)

        embed = None
        if str(user.id) in all_users.keys():
            embed = discord.Embed(colour=config.EMBED_COLOR, title='üö® –í–∞—Ä–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', description=f'> {user.mention} –∏–º–µ–µ—Ç:')
            for i in range(len(all_users[str(user.id)])):
                embed.add_field(name=f'{str(i + 1)})', value=all_users[str(user.id)][i], inline=False)
        else:
            embed = discord.Embed(colour=config.EMBED_COLOR, title="üö® –í–∞—Ä–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", description=f"> {user.mention} –Ω–µ –∏–º–µ–µ—Ç –≤–∞—Ä–Ω–æ–≤!")

        embed.set_thumbnail(url=user.avatar_url)
        await ctx.send(embed=embed)


    @commands.has_permissions(manage_messages=True)
    @commands.command(aliases = ['—É–¥–∞–ª–≤–∞—Ä–Ω', '–£–¥–∞–ª–≤–∞—Ä–Ω', '—É–¥–∞–ª–ø—Ä–µ–¥', '–£–¥–∞–ª–ø—Ä–µ–¥'])
    async def clear_warnings(self, ctx, user: discord.Member=None):
        server_id = ctx.guild
        file_path = f"warnings/{server_id}.json"
        if not os.path.exists(file_path):
            my_file = open(f"warnings/{server_id}.json", "w+", encoding='utf-8')
            my_file.write("{}")
            my_file.close()
        else:
            pass

        with open(f"warnings/{server_id}.json", 'r') as json_file:
            all_users = json.load(json_file)

        if str(user.id) not in all_users.keys():
            embed = discord.Embed(colour=config.EMBED_COLOR, title="üö® –í–∞—Ä–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", description=f"{user.mention} –Ω–µ –∏–º–µ–µ—Ç –≤–∞—Ä–Ω–æ–≤!")
        else:
            all_users.pop(str(user.id))

            with open(f"warnings/{server_id}.json", 'w') as json_file:
                json.dump(all_users, json_file)
            embed = discord.Embed(colour=config.EMBED_COLOR, title="üö® –í–∞—Ä–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", description=f'–í–∞—Ä–Ω—ã {user.mention} –±—ã–ª–∏ –æ—á–∏—â–µ–Ω—ã!')

        embed.set_thumbnail(url=user.avatar_url)
        await ctx.send(embed=embed)

#<<------------->>
def setup(bot):
   bot.add_cog(Warns(bot))