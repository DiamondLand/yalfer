from statistics import variance
from tkinter import Variable
import error_send
import discord
import random
import sqlite3
import datetime
from config import config
from discord.ext import commands
from rucogs.fun.system import FunCogFunctionality
#<<------------->>
class Fun(commands.Cog):
    def __init__(self, client):
        self.client = client
        self.connection = sqlite3.connect("database.db")
        self.cursor = self.connection.cursor()
    
    def get_prefix(self, cursor, message):
        cursor.execute(
            "SELECT * FROM prefixes WHERE guild_id = ?", 
            (
                message.guild.id,
            )
        )
        result = cursor.fetchone()
        if result is not None:
            return result[1]
        else:
            return "+"
#<<—Ä–µ—Å–ø–µ–∫—Ç----->>
    @commands.command(aliases = ['–†–µ—Å–ø–µ–∫—Ç', '—Ä–µ—Å–ø–µ–∫—Ç'])
    async def respect(self, ctx, member: discord.Member):
        if member == ctx.author:
            emb = discord.Embed(title = 'üíõ –ù–µ—Ç, –Ω–µ—Ç, –Ω–µ—Ç!', description="–†–µ—Å–ø–µ–∫—Ç–Ω—É—Ç—å —Å–∞–º–æ–º—É —Å–µ–±–µ –Ω–µ–ª—å–∑—è!", colour=config.EMBED_COLOR_WHAT)
            await ctx.reply(embed=emb, mention_author=False)
        else:
            self.connection.commit()
            hearts = ["üíñ", "üíõ", "üíö", "üíô", "üíú"]
            emb = discord.Embed(color=config.EMBED_COLOR, title = 'üòª –£–≤–∞–∂–µ–Ω–∏–µ:', description = f"{ctx.author.mention} —Ä–µ—Å–ø–µ–∫—Ç–Ω—É–ª {member.mention} {random.choice(hearts)}\
            \n\n> **–†–µ–π—Ç–∏–Ω–≥** {member.mention}: `+1`")
            date = datetime.datetime.today()
            emb.set_footer(icon_url = ctx.author.avatar_url, text=f'{date.strftime("%D")} ‚Ä¢ {date.strftime("%H:%M")}')
            await ctx.reply(embed=emb, mention_author=False)

#<<–¥—É—ç–ª—å------->>
    @commands.command(aliases = ['–î—É—ç–ª—å', '–¥—É—ç–ª—å', '–î—É–µ–ª—å', '–¥—É–µ–ª—å'])
    async def duel(self, ctx, member: discord.Member):
        if member == ctx.author:
            emb = discord.Embed(title = 'üíõ –ù–µ—Ç, –Ω–µ—Ç, –Ω–µ—Ç!',description="–°—Ä–∞–∂–∞—Ç—å—Å—è —Å–∞–º–∏–º c —Å–æ–±–æ–π –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è!", colour=config.EMBED_COLOR_WHAT)
            return await ctx.reply(embed=emb, mention_author=False)
        if member:
                variable = [
                f'> {member.mention} –ø–æ—Ç–µ—Ä–ø–µ–ª –ø–æ—Ä–∞–∂–µ–Ω–∏–µ\
                \n> {ctx.author.mention} –æ—Å—Ç–∞–ª—Å—è –≤ –∂–∏–≤—ã—Ö!',
                
                f'> {ctx.author.mention} –±—ã–ª –∑–∞—Å—Ç—Ä–µ–ª–µ–Ω...\
                \n> {member.mention} –æ—Å—Ç–∞–ª—Å—è –≤ –∂–∏–≤—ã—Ö!',

                f'> {member.mention} —É–±–µ–∂–∞–ª —Å –ø–æ–ª—è –±–æ—è!',

                f'> –£ {member.mention} –æ—Å–µ—á–∫–∞!\
                \n> {ctx.author.mention} –æ—Å—Ç–∞–ª—Å—è –≤ –∂–∏–≤—ã—Ö!',

                f'> –£ {ctx.author.mention} –æ—Å–µ—á–∫–∞!\
                \n> {member.mention} –æ—Å—Ç–∞–ª—Å—è –≤ –∂–∏–≤—ã—Ö!']     
                emb = discord.Embed(color=config.EMBED_COLOR, title='üí• –ò—Ç–æ–≥–∏ –ø–æ–µ–¥–∏–Ω–∫–∞:', description = '{}'.format(random.choice(variable)))
                date = datetime.datetime.today()
                emb.set_footer(icon_url = ctx.author.avatar_url, text=f'{date.strftime("%D")} ‚Ä¢ {date.strftime("%H:%M")}')
                await ctx.reply(embed = emb, mention_author=False)

#<<–∫—Ä–∞—à--------->>
    @commands.command(aliases=['–ö—Ä–∞—à', '–∫—Ä–∞—à'])
    async def love(self, ctx, *, member: discord.Member):
        member = member or ctx.author
        r = random.randint(1, 100)
        k = random.randint(1, 5)
        hot = r / k

        if hot > 70:
            emoji_love = "üíû"
        elif hot > 50:
            emoji_love = "üíñ"
        elif hot > 25:
            emoji_love = "üíù"
        else:
            emoji_love = "üíî"
        

        emb = discord.Embed(color=config.EMBED_COLOR, title=f'üíï –°–∏–º–ø–∞—Ç–∏—è:', description = f'{member.mention} –∫—Ä–∞—à –Ω–∞ `{hot:.2f}`% {emoji_love}!')
        emb.set_footer(icon_url = member.avatar_url, text = f'{member}')
        await ctx.reply(embed=emb, mention_author=False)

#<<—Å—É–¥—å–±–∞------->>
    @commands.command(aliases = ['–°—É–¥—å–±–∞', '—Å—É–¥—å–±–∞'])
    async def ball(self, ctx, *, text):
        variable = ['–î–∞–∞–∞–∞! :innocent:', 
        '–ê–≥–∞ —â–∞—Å :face_with_monocle: ', '100%', 
        '–ù–µ—Ç –∏ –µ—â—ë —Ä–∞–∑ –Ω–µ—Ç! :no_entry_sign: ', 
        '–¢—ã —á—Ç–æ?\n–ù–ï–¢! :four_leaf_clover: ', 
        '–ù–µ —Ö–æ—á—É —Ç–µ–±—è –æ–≥–æ—Ä—á–∞—Ç—å... :eyes: ', 
        '–•–æ-—Ö–æ-—Ö–æ. YES :heart_eyes:', 
        '–°–∫–æ—Ä–µ–µ –Ω–µ—Ç, —á–µ–º –¥–∞ :wave:', 
        '–ú–∞–ª–æ–≤–µ—Ä–æ—è—Ç–Ω–æ :moyai: ', 
        '–ú–æ–∂–µ—Ç –±—ã—Ç—å :gem: ', 
        '–¢–∞–∫ –∏ –±—É–¥–µ—Ç :heart_on_fire: ', 
        '–ê –∑–∞—á–µ–º —ç—Ç–æ —Ç–µ–±–µ?  :eggplant: ']
        await ctx.reply('{}'.format(random.choice(variable)), mention_author=False)

#<<–º–æ–Ω–µ—Ç–∫–∞------>>
    @commands.command(aliases=['–û—Ä—ë–ª', '–æ—Ä—ë–ª', '–û—Ä–µ–ª', '–æ—Ä–µ–ª'])
    async def orel(self, ctx):
        win = ["üíñ", "ü§©", "üòú", "üëª", "üíé"]
        lose = ["üò≥", "üíÄ", "ü§ê", "üëÄ", "ü§®"]
        gameplay = ['{} –¢—ã —É–≥–∞–¥–∞–ª. –≠—Ç–æ `–æ—Ä—ë–ª`!'.format(random.choice(win)), 
        '{} –¢—ã —Å–º–æ–≥! –ò–º–µ–Ω–Ω–æ `–æ—Ä—ë–ª` –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ –≤—ã–ø–∞–≤—à–µ–π —Å—Ç–æ—Ä–æ–Ω–µ!'.format(random.choice(win)), 
        '{} –ù–∞ –≤—ã–ø–∞–≤—à–µ–π —Å—Ç–æ—Ä–æ–Ω–µ –≤–∏–¥–Ω–µ–µ—Ç—Å—è `–æ—Ä—ë–ª`!'.format(random.choice(win)), 
        '{} –¢—ã —É–≥–∞–¥–∞–ª... –≠—Ç–æ `–æ—Ä—ë–ª`!'.format(random.choice(win)), 
        '{} –î–∞! –î–∞! –î–∞!'.format(random.choice(win)),

        '{} –ù–µ—Ç. –≠—Ç–æ `—Ä–µ—à–∫–∞`!'.format(random.choice(lose)), 
        '{} –•–∞-—Ö–∞-—Ö–∞! `–†–µ—à–∫–∞` –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ –≤—ã–ø–∞–≤—à–µ–π —Å—Ç–æ—Ä–æ–Ω–µ!'.format(random.choice(lose)), 
        '{} –ù–∞ –≤—ã–ø–∞–≤—à–µ–π —Å—Ç–æ—Ä–æ–Ω–µ –≤–∏–¥–Ω–µ–µ—Ç—Å—è `—Ä–µ—à–∫–∞`!'.format(random.choice(lose)), 
        '{} –õ—É—É—É—É–∑–µ—Ä... –≠—Ç–æ `—Ä–µ—à–∫–∞`!'.format(random.choice(lose)), 
        '{} –ù–µ—Ç! –ù–µ—Ç! –ù–µ—Ç!'.format(random.choice(lose))]

        await ctx.reply('{}'.format(random.choice(gameplay)), mention_author=False)

    @commands.command(aliases=['–†–µ—à–∫–∞', '—Ä–µ—à–∫–∞'])
    async def reshka(self, ctx):
        win = ["üíñ", "ü§©", "üòú", "üëª", "üíé"]
        lose = ["üò≥", "üíÄ", "ü§ê", "üëÄ", "ü§®"]
        gameplay = ['{} –¢—ã —É–≥–∞–¥–∞–ª. –≠—Ç–æ `—Ä–µ—à–∫–∞`!'.format(random.choice(win)), 
        '{} –¢—ã —Å–º–æ–≥! –ò–º–µ–Ω–Ω–æ `—Ä–µ—à–∫–∞` –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ –≤—ã–ø–∞–≤—à–µ–π —Å—Ç–æ—Ä–æ–Ω–µ!'.format(random.choice(win)), 
        '{} –ù–∞ –≤—ã–ø–∞–≤—à–µ–π —Å—Ç–æ—Ä–æ–Ω–µ –≤–∏–¥–Ω–µ–µ—Ç—Å—è `—Ä–µ—à–∫–∞`!'.format(random.choice(win)), 
        '{} –¢—ã —É–≥–∞–¥–∞–ª... –≠—Ç–æ `—Ä–µ—à–∫–∞`!'.format(random.choice(win)), 
        '{} –î–∞! –î–∞! –î–∞!'.format(random.choice(win)),

        '{} –ù–µ—Ç. –≠—Ç–æ `–æ—Ä—ë–ª`!'.format(random.choice(lose)), 
        '{} –•–∞-—Ö–∞-—Ö–∞! `–û—Ä—ë–ª` –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ –≤—ã–ø–∞–≤—à–µ–π —Å—Ç–æ—Ä–æ–Ω–µ!'.format(random.choice(lose)), 
        '{} –ù–∞ –≤—ã–ø–∞–≤—à–µ–π —Å—Ç–æ—Ä–æ–Ω–µ –≤–∏–¥–Ω–µ–µ—Ç—Å—è `–æ—Ä—ë–ª`!'.format(random.choice(lose)), 
        '{} –õ—É—É—É—É–∑–µ—Ä... –≠—Ç–æ `–æ—Ä—ë–ª`!'.format(random.choice(lose)), 
        '{} –ù–µ—Ç! –ù–µ—Ç! –ù–µ—Ç!'.format(random.choice(lose))]
        
        await ctx.reply('{}'.format(random.choice(gameplay)), mention_author=False)
#<<------------->>
def setup(bot):
   bot.add_cog(Fun(bot))            