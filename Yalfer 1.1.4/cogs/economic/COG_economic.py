import sqlite3
import asyncio
import os
import sys
import random
import time
from discord import member
from discord.ext.commands.core import command
from loguru import logger
import discord
from discord.ext import commands
from discord.utils import get
from cogs.economic.economic import EconomicCogFunctionality
import send_translated_msg


class EconomyCog(commands.Cog):

	def __init__(self, client):
		self.client = client
		self.conn = sqlite3.connect("database.db")
		self.cursor = self.conn.cursor()
	
	def get_prefix(self, cursor, message):
		cursor.execute(
			"SELECT * FROM prefixes WHERE guild_id = ?", 
			(
				message.guild.id,
			)
		)
		result = cursor.fetchone()
		if result is not None:
			return result[1]
		else:
			return "+"

	@commands.command(aliases = ['–ë–∞–ª–∞–Ω—Å', '–±–∞–ª–∞–Ω—Å', '–ë–∞–ª', '–±–∞–ª'])
	async def bal(self, ctx):
		"""
		:param ctx:
		:return:
		"""
		data = EconomicCogFunctionality.get_user_data(
			self.cursor,
			self.conn,
			ctx.message.author,
			ctx.guild
		)
		await EconomicCogFunctionality.send_balance_info(ctx, ctx.message.author, data)

	@commands.command(aliases = ['–ü–±–∞–ª–∞–Ω—Å', '–ø–±–∞–ª–∞–Ω—Å', '–ü–±–∞–ª', '–ø–±–∞–ª'])
	async def gbal(self, ctx, member: discord.Member):
		"""
		:param ctx:
		:param member:
		:return:
		"""
		data = EconomicCogFunctionality.get_user_data(
			self.cursor,
			self.conn,
			member,
			ctx.guild
		)
		await EconomicCogFunctionality.send_balance_info(ctx, member, data)

	@commands.has_permissions(administrator=True)
	@commands.command(aliases = ['–£—Å—Ç–±–∞–ª–∞–Ω—Å', '—É—Å—Ç–±–∞–ª–∞–Ω—Å', '–£—Å—Ç–±–∞–ª', '—É—Å—Ç–±–∞–ª'])
	async def set_wallet(self, ctx, member: discord.Member, balance: int):
		"""
		:param ctx:
		:param member:
		:param balance:
		:return:
		"""
		server = ctx.guild
		self.cursor.execute(
			"UPDATE economic SET wallet_balance = ? WHERE member_id = ? AND guild_id = ?",
			(
				balance,
				member.id,
				server.id
			)
		)
		self.conn.commit()
		emb = discord.Embed(color = 0xffd700, description = f'–ë–∞–ª–∞–Ω—Å {member.mention} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ `{balance}`üí∏!')
		await ctx.send(embed = emb)
	  

	@commands.has_permissions(administrator=True)
	@commands.command(aliases = ['–î–æ–±–±–∞–ª–∞–Ω—Å', '–¥–æ–±–±–∞–ª–∞–Ω—Å', '–î–æ–±–±–∞–ª', '–¥–æ–±–±–∞–ª'])
	async def add_bal(self, ctx, member: discord.Member, balance: int):
		"""
		:param ctx:
		:param member:
		:param balance:
		:return:
		"""
		user_data = EconomicCogFunctionality.get_user_data(
			self.cursor,
			self.conn,
			member,
			ctx.guild
		)
		EconomicCogFunctionality.change_balance(
			self.cursor,
			self.conn,
			member,
			ctx.guild,
			balance,
			user_data
		)
		emb = discord.Embed(color = 0xffd700, description = f'–£—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ `{balance}`üí∏!')
		await ctx.send(embed = emb)

	@commands.command(aliases = ['–ë–æ–Ω—É—Å', '–±–æ–Ω—É—Å'])
	@commands.cooldown(1, 3600, commands.BucketType.member)
	async def bonus(self, ctx, balance = 5000):
		user_data = EconomicCogFunctionality.get_user_data(
			self.cursor,
			self.conn,
			ctx.message.author,
			ctx.guild
		)
		member = ctx.message.author
		EconomicCogFunctionality.change_balance(
			self.cursor,
			self.conn,
			ctx.message.author,
			ctx.guild,
			balance,
			user_data
		)
		emb = discord.Embed(color = 0xffd700, description = f'{member.mention}, –≤—ã –ø–æ–ª—É—á–∏–ª–∏ `{balance}`üí∏!')
		await ctx.send(embed = emb)

#–¥–æ–∫—Ç–æ—Ä------------------------------------------------------------------------	
	@commands.command(aliases = ['–†–¥–æ–∫—Ç–æ—Ä', '—Ä–¥–æ–∫—Ç–æ—Ä'])
	@commands.cooldown(1, 10800, commands.BucketType.member)
	async def workdoctor(self, ctx, balance = 50000):
		user_data = EconomicCogFunctionality.get_user_data(
			self.cursor,
			self.conn,
			ctx.message.author,
			ctx.guild
		)
		member = ctx.message.author
		emb = discord.Embed(color = 0xffd700, title = '–†–∞–±–æ—Ç–∞ –¥–æ–∫—Ç–æ—Ä–æ–º:', description = f'–í—ã –ø—Ä–∏—Ö–æ–¥–∏—Ç–µ –≤ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—É—é –∏ –∂–¥—ë—Ç–µ –ø–∞—Ü–∏–µ–Ω–∏—Ç–∞...')
		emb.set_footer(text = '–û–∂–∏–¥–∞–π—Ç–µ, –ø–∞—Ü–∏–µ–Ω—Ç–∞ —É–∂–µ –≤–µ–∑—É—Ç')
		await ctx.send(embed = emb)
		time.sleep(2)
		emb = discord.Embed(color = 0xffd700, title = '–ü–∞—Ü–∏–µ–Ω—Ç –ø—Ä–∏–±—ã–ª!', description = f'–í—ã –º–æ–µ—Ç–µ —Ä—É–∫–∏, –Ω–∞–¥–µ–≤–∞–µ—Ç–µ –ø–µ—Ä—á–∞—Ç–∫–∏ –∏ –≥–æ—Ç–æ–≤–∏—Ç–µ—Å—å –∫ –æ–ø–µ—Ä–∞—Ü–∏–∏...')
		emb.set_footer(text = '–û–∂–∏–¥–∞–π—Ç–µ, –∏–¥—ë—Ç –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –æ–ø–µ—Ä–∞—Ü–∏–∏')
		await ctx.send(embed = emb)
		time.sleep(2)
		emb = discord.Embed(color = 0xffd700, title = '–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!', description = f'–ü–æ–¥–∞—á–∞ –Ω–∞—Ä–∫–æ–∑–∞. –ü–∞—Ü–∏–µ–Ω—Ç –º–µ–¥–ª–µ–Ω–æ –∑–∞—Å—ã–ø–∞–µ—Ç...')
		emb.set_footer(text = '–û–∂–∏–¥–∞–π—Ç–µ, –∏–¥—ë—Ç –æ–ø–µ—Ä–∞—Ü–∏—è')
		await ctx.send(embed = emb)
		time.sleep(3)
		emb = discord.Embed(color = 0xffd700, title = '–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ!', description = f'–í—Å—ë –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ. –ü–∞—Ü–∏–µ–Ω—Ç–∞ —É–≤–æ–∑—è—Ç –≤ –ø–∞–ª–∞—Ç—É...')
		await ctx.send(embed = emb)
		member = ctx.message.author
		EconomicCogFunctionality.change_balance(
			self.cursor,
			self.conn,
			ctx.message.author,
			ctx.guild,
			balance,
			user_data
		)
		emb = discord.Embed(color = 0xffd700, description = f'{member.mention} –ø–æ–ª—É—á–∏–ª `{balance}`üí∏ –∑–∞ —Ä–∞–±–æ—Ç—É –¥–æ–∫—Ç–æ—Ä–æ–º!')
		emb.set_footer(text = '–í–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—É—é —Ä–∞–±–æ—Ç—É –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ 2 —á–∞—Å–∞!')
		await ctx.send(embed = emb)


#–ø–∏–ª–æ—Ç------------------------------------------------------------
	@commands.command(aliases = ['–†–ø–∏–ª–æ—Ç', '—Ä–ø–∏–ª–æ—Ç'])
	@commands.cooldown(1, 7200, commands.BucketType.member)
	async def workpilot(self, ctx, balance = 25000):
		member = ctx.message.author
		user_data = EconomicCogFunctionality.get_user_data(
			self.cursor,
			self.conn,
			ctx.message.author,
			ctx.guild
		)
		emb = discord.Embed(color = 0xffd700, title = '–†–∞–±–æ—Ç–∞ –ø–∏–ª–æ—Ç–æ–º:', description = f'–í—ã —Å–∞–¥–∏—Ç–µ—Å—å –≤ —Å–∞–º–æ–ª—ë—Ç –∏ –ø—Ä–æ–≤–æ–¥–∏—Ç–µ –ß–ï–ö –ø–µ—Ä–µ–¥ –≤–∑–ª—ë—Ç–æ–º...')
		emb.set_footer(text = '–û–∂–∏–¥–∞–π—Ç–µ, –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ß–ï–ö')
		await ctx.send(embed = emb)
		time.sleep(2)
		emb = discord.Embed(color = 0xffd700, title = '–°–±–æ–µ–≤ –Ω–µ—Ç!', description = f'–í—ã –≤—ã—Ä—É–ª–∏–≤–∞–µ—Ç–µ –Ω–∞ –í–ü–ü –∏ –∂–¥—ë—Ç–µ –¥–æ–±—Ä–æ –Ω–∞ –≤–∑–ª—ë—Ç...')
		emb.set_footer(text = '–û–∂–∏–¥–∞–π—Ç–µ –¥–æ–±—Ä–æ –Ω–∞ –≤–∑–ª—ë—Ç')
		await ctx.send(embed = emb)
		time.sleep(2)
		emb = discord.Embed(color = 0xffd700, title = '–î–æ–±—Ä–æ –ø–æ–ª—É—á–µ–Ω–æ!', description = f'–í—ã –≤–∑–ª–µ—Ç–∞–µ—Ç–µ. –ü–æ–ø—É—Ç–Ω–æ–≥–æ –≤–µ—Ç—Ä–∞!')
		emb.set_footer(text = '–û–∂–∏–¥–∞–π—Ç–µ, –ø–æ–ª—ë—Ç –Ω–∞—á–∞–ª—Å—è')
		await ctx.send(embed = emb)
		time.sleep(3)
		emb = discord.Embed(color = 0xffd700, title = '–ü–æ—Å–∞–¥–∫–∞!', description = f'–†–µ–π—Å —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à—ë–Ω!')
		await ctx.send(embed = emb)

		member = ctx.message.author
		EconomicCogFunctionality.change_balance(
			self.cursor,
			self.conn,
			ctx.message.author,
			ctx.guild,
			balance,
			user_data
		)
		emb = discord.Embed(color = 0xffd700, description = f'{member.mention} –ø–æ–ª—É—á–∏–ª `{balance}`üí∏ –∑–∞ —Ä–∞–±–æ—Ç—É –ø–∏–ª–æ—Ç–æ–º!')
		emb.set_footer(text = '–í–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—É—é —Ä–∞–±–æ—Ç—É –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ 2 —á–∞—Å–∞!')
		await ctx.send(embed = emb)
#—É—á–∏—Ç–µ–ª—å--------------------------------------------------------
	@commands.command(aliases = ['–†—É—á–∏—Ç–µ–ª—å', '—Ä—É—á–∏—Ç–µ–ª—å'])
	@commands.cooldown(1, 3600, commands.BucketType.member)
	async def workteacher(self, ctx, balance = 10000):
		member = ctx.message.author

		user_data = EconomicCogFunctionality.get_user_data(
			self.cursor,
			self.conn,
			ctx.message.author,
			ctx.guild
		)
		emb = discord.Embed(color = 0xffd700, title = '–†–∞–±–æ—Ç–∞ —É—á–∏—Ç–µ–ª–µ–º:', description = f'–í—ã –∑–∞—Ö–æ–¥–∏—Ç–µ –≤ –∫–∞–±–∏–Ω–µ—Ç –¥–∏—Ä–µ–∫—Ç–æ—Ä–∞ –Ω–∞ –ø–ª–∞–Ω—ë—Ä–∫—É...')
		emb.set_footer(text = '–û–∂–∏–¥–∞–π—Ç–µ, –∏–¥—ë—Ç –ø–ª–∞–Ω—ë—Ä–∫–∞')
		await ctx.send(embed = emb)
		time.sleep(2)
		emb = discord.Embed(color = 0xffd700, title = '–ü–ª–∞–Ω—ë—Ä–∫–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–∞!', description = f'–í—ã –∏–¥—ë—Ç–µ –≤ –∫–∞–±–∏–Ω–µ—Ç –∏ –∂–¥—ë—Ç–µ –Ω–∞—á–∞–ª–æ —É—Ä–æ–∫–∞...')
		emb.set_footer(text = '–û–∂–∏–¥–∞–π—Ç–µ, —É—Ä–æ–∫ —Å–∫–æ—Ä–æ –Ω–∞—á–Ω—ë—Ç—Å—è')
		await ctx.send(embed = emb)
		time.sleep(2)
		emb = discord.Embed(color = 0xffd700, title = '–ó–≤–æ–Ω–æ–∫ –Ω–∞ —É—Ä–æ–∫!', description = f'–î–µ—Ç–∏ –∑–∞—Ö–æ–¥—è—Ç –≤ –∫–ª–∞—Å—Å, –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —É—Ä–æ–∫–∏!')
		emb.set_footer(text = '–û–∂–∏–¥–∞–π—Ç–µ, —É—Ä–æ–∫ –Ω–∞—á–∞–ª—Å—è')
		await ctx.send(embed = emb)
		time.sleep(3)
		emb = discord.Embed(color = 0xffd700, title = '–ó–≤–æ–Ω–æ–∫ —Å —É—Ä–æ–∫–∞!', description = f'–í—Å–µ —É—Ä–æ–∫–∏ –ø—Ä–æ—â–ª–∏, –≤–∞—à —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å –∑–∞–≤–µ—Ä—à—ë–Ω!')
		await ctx.send(embed = emb)

		member = ctx.message.author
		EconomicCogFunctionality.change_balance(
			self.cursor,
			self.conn,
			ctx.message.author,
			ctx.guild,
			balance,
			user_data
		)
		emb = discord.Embed(color = 0xffd700, description = f'{member.mention} –ø–æ–ª—É—á–∏–ª `{balance}`üí∏ –∑–∞ —Ä–∞–±–æ—Ç—É —É—á–∏—Ç–µ–ª–µ–º!')
		emb.set_footer(text = '–í–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—É—é —Ä–∞–±–æ—Ç—É –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ 1 —á–∞—Å!')
		await ctx.send(embed = emb)

	@commands.command(aliases = ['–ü–µ—Ä–µ–¥–∞—Ç—å', '–ø–µ—Ä–µ–¥–∞—Ç—å'])
	async def send_gift(self, ctx, member: discord.Member, cash: int):
		"""
		:param ctx:
		:param member:
		:param cash:
		:return:
		"""
		user_data = EconomicCogFunctionality.get_user_data(
			self.cursor,
			self.conn,
			ctx.message.author,
			ctx.guild
		)
		getter_balance = int(
			EconomicCogFunctionality.get_user_data(
				self.cursor,
				self.conn,
				member,
				ctx.guild
			)[3]
		)
		users_balance = int(
			user_data[3]
		)
		if int(cash) > users_balance:
			emb = discord.Embed(colour = discord.Color.red(), description = '–£ –≤–∞—Å `–Ω–µ—Ç` —Ç–∞–∫–æ–π —Å—É–º–º—ã!')
			await ctx.send(embed = emb)
		else:
			self.cursor.execute(
				"UPDATE economic SET wallet_balance = ? WHERE member_id = ? AND guild_id = ?",
				(
					users_balance - int(cash),
					ctx.message.author.id,
					ctx.guild.id
				)
			)
			self.cursor.execute(
				"UPDATE economic SET wallet_balance = ? WHERE member_id = ? AND guild_id = ?",
				(
					getter_balance + int(cash),
					member.id,
					ctx.guild.id
				)
			)
			self.conn.commit()
			author = ctx.message.author
			emb = discord.Embed(color = 0xffd700, description = f'{author.mention}, –≤—ã –ø–µ—Ä–µ–¥–∞–ª–∏ {member.mention} `{cash}`üí∏!')
			await ctx.send(embed = emb)

	@commands.has_permissions(administrator=True)
	@commands.command(aliases = ['–£–¥–∞–ª–±–∞–ª–∞–Ω—Å', '—É–¥–∞–ª–±–∞–ª–∞–Ω—Å', '–£–¥–∞–ª–±–∞–ª', '—É–¥–∞–ª–±–∞–ª'])
	async def del_bal(self, ctx, member: discord.Member, balance: int):
		"""
		:param ctx:
		:param member:
		:param balance:
		:return:
		"""
		user_data = EconomicCogFunctionality.get_user_data(
			self.cursor,
			self.conn,
			member,
			ctx.guild
		)
		server = ctx.guild
		if user_data[3] < int(balance):
			emb = discord.Embed(colour = discord.Color.red(), description = f'{member.mention} `–Ω–µ –∏–º–µ–µ—Ç` —Ç–∞–∫–æ–π —Å—É–º–º—ã!')
			await ctx.send(embed = emb)
		else:
			EconomicCogFunctionality.change_balance(
				self.cursor,
				self.conn,
				member,
				ctx.guild,
				- balance,
				user_data
			)
			emb = discord.Embed(color = 0xffd700, description = f'–£—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ `{balance}`üí∏!')
			await ctx.send(embed = emb)

	@commands.command(aliases = ['–ü–æ–∂–µ—Ä—Ç–æ–≤–∞—Ç—å', '–ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞—Ç—å'])
	async def fond(self, ctx, balance: int):
		"""
		:param ctx:
		:param balance:
		:return:
		"""
		user_data = EconomicCogFunctionality.get_user_data(
			self.cursor,
			self.conn,
			ctx.message.author,
			ctx.guild
		)
		server = ctx.guild
		if user_data[3] < int(balance):
			emb = discord.Embed(colour = discord.Color.red(), description = '–£ –≤–∞—Å `–Ω–µ—Ç` —Ç–∞–∫–æ–π —Å—É–º–º—ã!')
			await ctx.send(embed = emb)
		else:
			EconomicCogFunctionality.change_balance(
				self.cursor,
				self.conn,
				ctx.message.author,
				ctx.guild,
				- balance,
				user_data
			)
			author = ctx.message.author
			emb = discord.Embed(color = 0xffd700, description = f'{author.mention}, —Å–ø–∞—Å–∏–±–æ –≤–∞–º! –í—ã –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–ª–∏ `{balance}`üí∏!')
			await ctx.send(embed = emb)

	@commands.has_permissions(administrator=True)
	@commands.command(aliases = ['–î–æ–±–º–∞–≥–∞–∑', '–¥–æ–±–º–∞–≥–∞–∑'])
	async def add_shop_item(self, ctx, role: discord.Role, prise: int):
		"""
		:param ctx:
		:param role:
		:param prise:
		:return:
		"""
		self.cursor.execute(
			"INSERT INTO economic_shop_item VALUES(?, ?, ?)",
			(
				ctx.guild.id,
				role.id,
				prise
			)
		)
		self.conn.commit()
		emb = discord.Embed(color = 0xffd700, description = f'{role.mention} —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!')
		await ctx.send(embed = emb)

	@commands.has_permissions(administrator=True)
	@commands.command(aliases = ['–£–¥–∞–ª–º–∞–≥–∞–∑', '—É–¥–∞–ª–º–∞–≥–∞–∑'])
	async def del_shop_item(self, ctx, role: discord.Role):
		"""
		:param ctx:
		:param role:
		:return:
		"""
		self.cursor.execute(
			"DELETE FROM economic_shop_item WHERE guild_id = ? AND role_id = ?",
			(
				ctx.guild.id,
				role.id,
			)
		)
		self.conn.commit()
		emb = discord.Embed(color = 0xffd700, description = f'{role.mention} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞!')
		await ctx.send(embed = emb)

	@commands.command(aliases = ['–ú–∞–≥–∞–∑', '–º–∞–≥–∞–∑', '–ú–∞–≥–∞–∑–∏–Ω', '–º–∞–≥–∞–∑–∏–Ω'])
	async def shop(self, ctx):
		prefix = self.get_prefix(self.cursor, ctx.message)
		"""
		:param ctx:
		:return:
		"""
		data = EconomicCogFunctionality.get_all_shop_items(
			self.cursor,
			ctx.guild
		)
		data.reverse()
		emb = discord.Embed(color = 0xffd700, title="–ú–∞–≥–∞–∑–∏–Ω —Ä–æ–ª–µ–π:")
		for item in data:
			emb.add_field(name=f"–†–æ–ª—å: `{ctx.guild.get_role(item[1]).name}`", value=f"–¶–µ–Ω–∞: `{item[2]}`", inline=False)
			emb.set_footer(text = f'–ö—É–ø–∏—Ç—å: {prefix}–∫—É–ø–∏—Ç—å @—Ä–æ–ª—å')
		await ctx.send(embed = emb)

	@commands.command(aliases = ['–ö—É–ø–∏—Ç—å', '–∫—É–ø–∏—Ç—å'])
	async def buy(self, ctx, role: discord.Role):
		"""
		:param ctx:
		:param role:
		:return:
		"""
		data = EconomicCogFunctionality.get_all_shop_items(
			self.cursor,
			ctx.guild
		)
		role_exists = False
		balance = 0
		for item in data:
			if item[1] == role.id:
				role_exists = True
				balance = item[2]
				break
		member = ctx.message.author
		if not role_exists:
			await ctx.send("–¢–∞–∫–æ–π —Ä–æ–ª–∏ `–Ω–µ—Ç` –≤ –º–∞–≥–∞–∑–∏–Ω–µ!")
		else:
			user_data = EconomicCogFunctionality.get_user_data(self.cursor, self.conn, ctx.message.author, ctx.guild)
			server = ctx.guild
			if user_data[3] < int(balance):
				emb = discord.Embed(colour = discord.Color.red(), description = f'{ctx.message.author.mention} –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∫—É–ø–∏—Ç—å —Ä–æ–ª—å {role.mention}. –£ –≤–∞—Å –Ω–µ—Ç —Ç–∞–∫–æ–π —Å—É–º–º—ã –¥–µ–Ω–µ–≥!')
				await ctx.send(embed = emb)
			else:
				EconomicCogFunctionality.change_balance(
					self.cursor,
					self.conn,
					member,
					ctx.guild,
					- balance,
					user_data
				)
				await ctx.message.author.add_roles(role)
				emb = discord.Embed(color = 0xffd700, description = f'{ctx.message.author.mention}, –≤—ã –ø–æ–ª—É—á–∏–ª–∏ {role.mention}!')
				await ctx.send(embed = emb)

# setup function
def setup(client):
	"""
	:param client:
	:return:
	"""
	client.add_cog(EconomyCog(client))

