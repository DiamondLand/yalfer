from ast import alias
import sqlite3
import asyncio
import os
import sys
import random
import time
from discord.ext.commands.core import command
from loguru import logger
import discord
from discord.ext import commands
from discord.utils import get
from cogs.economic.system import EconomicCogFunctionality
from config import config

class EconomyCog(commands.Cog):

    def __init__(self, client):
        self.client = client
        self.conn = sqlite3.connect("database.db")
        self.cursor = self.conn.cursor()
    
    def get_prefix(self, cursor, message):
        cursor.execute(
            "SELECT * FROM prefixes WHERE guild_id = ?", 
            (
                message.guild.id,
            )
        )
        result = cursor.fetchone()
        if result is not None:
            return result[1]
        else:
            return "+"

    #–±–∞–ª–∞–Ω—Å-------------------------------------------------
    @commands.command(aliases = ['–ë–∞–ª–∞–Ω—Å', '–±–∞–ª–∞–Ω—Å', '–ë–∞–ª', '–±–∞–ª'])
    async def bal(self, ctx, user: discord.Member = None):
        user = user or ctx.author
        """
        :param ctx:
        :return:
        """
        data = EconomicCogFunctionality.get_user_data(
            self.cursor,
            self.conn,
            user,
            ctx.guild
        )
        await EconomicCogFunctionality.send_balance_info(ctx, user, data)

    #–±–∞–Ω–∫-------------------------------------------------
    @commands.command(aliases = ['–í–±–∞–Ω–∫', '–≤–±–∞–Ω–∫'])
    async def to_bank(self, ctx, balance: int):
        
        """
        :param ctx:
        :param balance:
        :return:
        """
        member = ctx.message.author
        user_data = EconomicCogFunctionality.get_user_data(
            self.cursor,
            self.conn,
            member, 
            ctx.guild
        )
        if user_data[3] < int(balance):
            emb = discord.Embed(colour=config.EMBED_COLOR_ERROR, title="‚ùå –û—à–∏–±–∫–∞:", description = '–£ –í–∞—Å –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –¥–∞–Ω–Ω–∞—è —Å—É–º–º–∞!')
            await ctx.reply(embed = emb, mention_author=False)
        else:
            if user_data[2] >= 999999999999999999:
                emb = discord.Embed(colour=config.EMBED_COLOR_ERROR, title="‚ùå –û—à–∏–±–∫–∞:", description = '–ë—Ä–∞—Ç, –±—Ä–∞—Ç, –±—Ä–∞—Ç. –î–∞–≤–∞–π –Ω–µ —Ç–∞–∫ –º–Ω–æ–≥–æ, –æ–∫–µ–π?')
                await ctx.reply(embed = emb, mention_author=False)
            else:
                EconomicCogFunctionality.change_balance(
                    self.cursor,
                    self.conn,
                    member,
                    ctx.guild,
                    - balance,
                    user_data
                )
                EconomicCogFunctionality.change_bank_balance(
                    self.cursor,
                    self.conn,
                    member,
                    ctx.guild,
                    balance,
                    user_data
                )
                emb = discord.Embed(color = config.EMBED_COLOR, title=f'–ê–∫–∫–∞—É–Ω—Ç {member}:', description = f'üíñ –ü–µ—Ä–µ–≤—ë–ª –≤ –±–∞–Ω–∫ `{balance}`üí∏!')
                await ctx.reply(embed = emb, mention_author=False)

    #–∏–∑–±–∞–Ω–∫–∞-------------------------------------------------
    @commands.command(aliases = ['–ò–∑–±–∞–Ω–∫–∞', '–∏–∑–±–∞–Ω–∫–∞'])
    async def from_bank(self, ctx, balance: int):
        """
        :param ctx:
        :param balance:
        :return:
        """
        member = ctx.message.author
        user_data = EconomicCogFunctionality.get_user_data(
            self.cursor,
            self.conn,
            member, 
            ctx.guild
        )
        if user_data[2] < int(balance):
            emb = discord.Embed(colour=config.EMBED_COLOR_ERROR, title="‚ùå –û—à–∏–±–∫–∞:", description = '–£ –í–∞—Å –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –¥–∞–Ω–Ω–∞—è —Å—É–º–º–∞!')
            await ctx.reply(embed = emb, mention_author=False)
        else:
            users_balance = int(
                user_data[3]
            )
            if int(balance) + users_balance > 999999999999999999:
                emb = discord.Embed(colour=config.EMBED_COLOR_ERROR, title="‚ùå –û—à–∏–±–∫–∞:", description = '–ë—Ä–∞—Ç, –±—Ä–∞—Ç, –±—Ä–∞—Ç. –î–∞–≤–∞–π –Ω–µ —Ç–∞–∫ –º–Ω–æ–≥–æ, –æ–∫–µ–π?')
                await ctx.reply(embed = emb, mention_author=False)
            else:
                EconomicCogFunctionality.change_balance(
                    self.cursor,
                    self.conn,
                    member,
                    ctx.guild,
                    balance,
                    user_data
                )
                EconomicCogFunctionality.change_bank_balance(
                    self.cursor,
                    self.conn,
                    member,
                    ctx.guild,
                    - balance,
                    user_data
                )
                self.conn.commit()
                emb = discord.Embed(color = config.EMBED_COLOR, title=f'–ê–∫–∫–∞—É–Ω—Ç {member}:', description = f'üíñ –û–±–Ω–∞–ª–∏—á–∏–ª `{balance}`üí∏!')
                await ctx.reply(embed = emb, mention_author=False)

    #–∫—Ä–∞–∂–∞-------------------------------------------------
    @commands.command(aliases = ['–£–∫—Ä–∞—Å—Ç—å', '—É–∫—Ä–∞—Å—Ç—å', '–ö—Ä–∞–∂–∞', '–∫—Ä–∞–∂–∞'])
    @commands.cooldown(1, 3600, commands.BucketType.member)
    async def grab(self, ctx, member: discord.Member):
        """
        :param ctx:
        :param member:
        :param balance:
        :return:
        """
        balance = random.randint(5000, 50000)
        user_data = EconomicCogFunctionality.get_user_data(
            self.cursor,
            self.conn,
            member,
            ctx.guild
        )
        users_balance = int(
                user_data[3]
            )
        if user_data[2] >= 999999999999999999:
            emb = discord.Embed(colour=config.EMBED_COLOR_ERROR, title="‚ùå –û—à–∏–±–∫–∞:", description = '–ë—Ä–∞—Ç, –±—Ä–∞—Ç, –±—Ä–∞—Ç. –î–∞–≤–∞–π –Ω–µ —Ç–∞–∫ –º–Ω–æ–≥–æ, –æ–∫–µ–π?')
            await ctx.reply(embed = emb, mention_author=False)
        else:
            if users_balance < 50000:
                emb = discord.Embed(colour=config.EMBED_COLOR_ERROR, title="‚ùå –û—à–∏–±–∫–∞:", description = f'–£ {member.mention} –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!')
                await ctx.reply(embed = emb, mention_author=False)
            else:
                grab = random.randint(1, 3)
                if grab == 1:
                    EconomicCogFunctionality.change_balance(
                        self.cursor,
                        self.conn,
                        member,
                        ctx.guild,
                        -balance,
                        user_data
                    )
                    user_data = EconomicCogFunctionality.get_user_data(
                        self.cursor,
                        self.conn,
                        ctx.author,
                        ctx.guild
                    )
                    EconomicCogFunctionality.change_balance(
                        self.cursor,
                        self.conn,
                        ctx.author,
                        ctx.guild,
                        balance,
                        user_data
                    )
                    emb = discord.Embed(color = config.EMBED_COLOR, title=f'–ê–∫–∫–∞—É–Ω—Ç {ctx.author}:', description = f'üíñ –û–±–æ–∫—Ä–∞–ª {member.mention} –Ω–∞ `{balance}`üí∏!')
                    await ctx.reply(embed = emb, mention_author=False)
                else:
                    emb = discord.Embed(color = config.EMBED_COLOR, title=f'–ê–∫–∫–∞—É–Ω—Ç {ctx.author}:', description = f'üíî –ü—ã—Ç–∞–ª—Å—è –æ–±–æ–∫—Ä–∞—Å—Ç—å {member.mention}, –Ω–æ –Ω–µ —Å–º–æ–≥!')
                    await ctx.reply(embed = emb, mention_author=False)

    #—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å–±–∞–Ω–∫-------------------------------------------------
    @commands.has_permissions(administrator=True)
    @commands.command(aliases = ['–£—Å—Ç–±–∞–Ω–∫', '—É—Å—Ç–±–∞–Ω–∫'])
    async def set_wallet_bank(self, ctx, member: discord.Member, balance: int):
        """
        :param ctx:
        :param member:
        :param balance:
        :return:
        """
        if int(balance) < 0:
            emb = discord.Embed(colour=config.EMBED_COLOR_ERROR, title="‚ùå –û—à–∏–±–∫–∞:", description = '–°—É–º–º–∞ –≤–≤–æ–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ —á–µ–º `0`!')
            await ctx.reply(embed = emb, mention_author=False)
        else:
            if int(balance) > 999999999999999999:
                emb = discord.Embed(colour=config.EMBED_COLOR_ERROR, title="‚ùå –û—à–∏–±–∫–∞:", description = '–ë—Ä–∞—Ç, –±—Ä–∞—Ç, –±—Ä–∞—Ç. –î–∞–≤–∞–π –Ω–µ —Ç–∞–∫ –º–Ω–æ–≥–æ, –æ–∫–µ–π?')
                await ctx.reply(embed = emb, mention_author=False)
            else:
                server = ctx.guild
                self.cursor.execute(
                    "UPDATE economic SET bank_balance = ? WHERE member_id = ? AND guild_id = ?",
                    (
                        balance,
                        member.id,
                        server.id
                    )
                )
                self.conn.commit()
                emb = discord.Embed(color = config.EMBED_COLOR, title=f'–ë–∞–Ω–∫ {member}:', description = f'üíñ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ `{balance}`üí∏!')
                await ctx.reply(embed = emb, mention_author=False)

    #–¥–æ–±–∞–≤–∏—Ç—å–±–∞–Ω–∫-------------------------------------------------	
    @commands.has_permissions(administrator=True)
    @commands.command(aliases = ['–î–æ–±–∞–Ω–∫', '–¥–æ–±–∞–Ω–∫', '–î–æ–±–±–∞–Ω–∫' ,'–¥–æ–±–±–∞–Ω–∫'])
    async def add_bal_bank(self, ctx, member: discord.Member, balance: int):
        """
        :param ctx:
        :param member:
        :param balance:
        :return:
        """
        user_data = EconomicCogFunctionality.get_user_data(
            self.cursor,
            self.conn,
            member, 
            ctx.guild
        )
        if int(balance) <= 0:
            emb = discord.Embed(colour=config.EMBED_COLOR_ERROR, title="‚ùå –û—à–∏–±–∫–∞:", description = '–°—É–º–º–∞ –≤–≤–æ–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ —á–µ–º `0`!')
            await ctx.reply(embed = emb, mention_author=False)
        else:
            if int(balance) + user_data[2] > 999999999999999999:
                emb = discord.Embed(colour=config.EMBED_COLOR_ERROR, title="‚ùå –û—à–∏–±–∫–∞:", description = '–ë—Ä–∞—Ç, –±—Ä–∞—Ç, –±—Ä–∞—Ç. –î–∞–≤–∞–π –Ω–µ —Ç–∞–∫ –º–Ω–æ–≥–æ, –æ–∫–µ–π?')
                await ctx.reply(embed = emb, mention_author=False)
            else:
                user_data = EconomicCogFunctionality.get_user_data(
                    self.cursor,
                    self.conn,
                    member,
                    ctx.guild
                )
                EconomicCogFunctionality.change_bank_balance(
                    self.cursor,
                    self.conn,
                    member,
                    ctx.guild,
                    balance,
                    user_data
                )
                emb = discord.Embed(color = config.EMBED_COLOR, title=f'–ë–∞–Ω–∫ {member}:', description = f'üíñ –î–æ–±–∞–≤–ª–µ–Ω–æ `{balance}`üí∏!')
                await ctx.reply(embed = emb, mention_author=False)

    #—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å-------------------------------------------------
    @commands.has_permissions(administrator=True)
    @commands.command(aliases = ['–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å', '—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å'])
    async def set_wallet(self, ctx, member: discord.Member, balance: int):
        """
        :param ctx:
        :param member:
        :param balance:
        :return:
        """
        if int(balance) > 999999999999999999:
            emb = discord.Embed(colour=config.EMBED_COLOR_ERROR, title="‚ùå –û—à–∏–±–∫–∞:", description = '–ë—Ä–∞—Ç, –±—Ä–∞—Ç, –±—Ä–∞—Ç. –î–∞–≤–∞–π –Ω–µ —Ç–∞–∫ –º–Ω–æ–≥–æ, –æ–∫–µ–π?')
            await ctx.reply(embed = emb, mention_author=False)
        else:
            if int(balance) < 0:
                emb = discord.Embed(colour=config.EMBED_COLOR_ERROR, title="‚ùå –û—à–∏–±–∫–∞:", description = '–°—É–º–º–∞ –≤–≤–æ–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ —á–µ–º `0`!')
                await ctx.reply(embed = emb, mention_author=False)
            else:
                server = ctx.guild
                self.cursor.execute(
                    "UPDATE economic SET wallet_balance = ? WHERE member_id = ? AND guild_id = ?",
                    (
                        balance,
                        member.id,
                        server.id
                    )
                )
                self.conn.commit()
                emb = discord.Embed(color = config.EMBED_COLOR, title=f'–ë–∞–ª–∞–Ω—Å {member}:', description = f'üíñ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ `{balance}`üí∏!')
                await ctx.reply(embed = emb, mention_author=False)

    #–¥–æ–±–∞–≤–∏—Ç—å-------------------------------------------------	
    @commands.has_permissions(administrator=True)
    @commands.command(aliases = ['–î–æ–±–∞–≤–∏—Ç—å', '–¥–æ–±–∞–≤–∏—Ç—å'])
    async def add_bal(self, ctx, member: discord.Member, balance: int):
        """
        :param ctx:
        :param member:
        :param balance:
        :return:
        """
        user_data = EconomicCogFunctionality.get_user_data(
            self.cursor,
            self.conn,
            member,
            ctx.guild
        )
        users_balance = int(
                user_data[3]
            )
        if int(balance) + users_balance > 999999999999999999:
            emb = discord.Embed(colour=config.EMBED_COLOR_ERROR, title="‚ùå –û—à–∏–±–∫–∞:", description = '–ë—Ä–∞—Ç, –±—Ä–∞—Ç, –±—Ä–∞—Ç. –î–∞–≤–∞–π –Ω–µ —Ç–∞–∫ –º–Ω–æ–≥–æ, –æ–∫–µ–π?')
            await ctx.reply(embed = emb, mention_author=False)
        else:
            if int(balance) <= 0:
                emb = discord.Embed(colour=config.EMBED_COLOR_ERROR, title="‚ùå –û—à–∏–±–∫–∞:", description = '–°—É–º–º–∞ –≤–≤–æ–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ —á–µ–º `0`!')
                await ctx.reply(embed = emb, mention_author=False)
            else:
                user_data = EconomicCogFunctionality.get_user_data(
                    self.cursor,
                    self.conn,
                    member,
                    ctx.guild
                )
                EconomicCogFunctionality.change_balance(
                    self.cursor,
                    self.conn,
                    member,
                    ctx.guild,
                    balance,
                    user_data
                )
                emb = discord.Embed(color = config.EMBED_COLOR, title=f'–ë–∞–ª–∞–Ω—Å {member}:', description = f'üíñ –î–æ–±–∞–≤–ª–µ–Ω–æ `{balance}`üí∏!')
                await ctx.reply(embed = emb, mention_author=False)
      
    #–±–æ–Ω—É—Å---------------------------------------------------------------------
    @commands.command(aliases = ['–ë–æ–Ω—É—Å', '–±–æ–Ω—É—Å'])
    @commands.cooldown(1, 3600, commands.BucketType.member)
    async def bonus(self, ctx, balance = 5000):
        user_data = EconomicCogFunctionality.get_user_data(
            self.cursor,
            self.conn,
            ctx.message.author,
            ctx.guild
        )
        users_balance = int(
                user_data[3]
            )
        if int(balance) + users_balance > 999999999999999999:
            emb = discord.Embed(colour=config.EMBED_COLOR_ERROR, title="‚ùå –û—à–∏–±–∫–∞:", description = '–ë—Ä–∞—Ç, –±—Ä–∞—Ç, –±—Ä–∞—Ç. –£ —Ç–µ–±—è –∏ —Ç–∞–∫ –º–Ω–æ–≥–æ –¥–µ–Ω–µ–≥!')
            await ctx.reply(embed = emb, mention_author=False)
        else:
            user_data = EconomicCogFunctionality.get_user_data(
                self.cursor,
                self.conn,
                ctx.message.author,
                ctx.guild
            )
            member = ctx.message.author
            EconomicCogFunctionality.change_balance(
                self.cursor,
                self.conn,
                ctx.message.author,
                ctx.guild,
                balance,
                user_data
            )
            emb = discord.Embed(color = config.EMBED_COLOR, title=f'–ë–∞–ª–∞–Ω—Å {member}:', description = f'üíñ –ü–æ–ª—É—á–µ–Ω–æ `{balance}`üí∏!')
            await ctx.reply(embed = emb, mention_author=False)

    #–¥–æ–∫—Ç–æ—Ä------------------------------------------------------------------------	
    @commands.command(aliases = ['–î–æ–∫—Ç–æ—Ä', '–¥–æ–∫—Ç–æ—Ä'])
    @commands.cooldown(1, 10800, commands.BucketType.member)
    async def doctor(self, ctx, balance = config.MEDIC):
        user_data = EconomicCogFunctionality.get_user_data(
            self.cursor,
            self.conn,
            ctx.message.author,
            ctx.guild
        )
        users_balance = int(
                user_data[3]
            )
        if int(balance) + users_balance > 999999999999999999:
            emb = discord.Embed(colour=config.EMBED_COLOR_ERROR, title="‚ùå –û—à–∏–±–∫–∞:", description = '–ë—Ä–∞—Ç, –±—Ä–∞—Ç, –±—Ä–∞—Ç. –£ —Ç–µ–±—è –∏ —Ç–∞–∫ –º–Ω–æ–≥–æ –¥–µ–Ω–µ–≥!')
            await ctx.reply(embed = emb, mention_author=False)
        else:
            user_data = EconomicCogFunctionality.get_user_data(
                self.cursor,
                self.conn,
                ctx.message.author,
                ctx.guild
            )
            member = ctx.message.author
            EconomicCogFunctionality.change_balance(
                self.cursor,
                self.conn,
                ctx.message.author,
                ctx.guild,
                balance,
                user_data
            )
            emb = discord.Embed(color = config.EMBED_COLOR, title=f'–ë–∞–ª–∞–Ω—Å {member}:', description = f'üíñ –ü–æ–ª—É—á–µ–Ω–æ `{balance}`üí∏!')
            await ctx.reply(embed = emb, mention_author=False)


    #–ø–∏–ª–æ—Ç------------------------------------------------------------
    @commands.command(aliases = ['–ü–∏–ª–æ—Ç', '–ø–∏–ª–æ—Ç'])
    @commands.cooldown(1, 7200, commands.BucketType.member)
    async def pilot(self, ctx, balance = config.PILOT):
        user_data = EconomicCogFunctionality.get_user_data(
            self.cursor,
            self.conn,
            ctx.message.author,
            ctx.guild
        )
        users_balance = int(
                user_data[3]
            )
        if int(balance) + users_balance > 999999999999999999:
            emb = discord.Embed(colour=config.EMBED_COLOR_ERROR, title="‚ùå –û—à–∏–±–∫–∞:", description = '–ë—Ä–∞—Ç, –±—Ä–∞—Ç, –±—Ä–∞—Ç. –£ —Ç–µ–±—è –∏ —Ç–∞–∫ –º–Ω–æ–≥–æ –¥–µ–Ω–µ–≥!')
            await ctx.reply(embed = emb, mention_author=False)
        else:
            user_data = EconomicCogFunctionality.get_user_data(
                self.cursor,
                self.conn,
                ctx.message.author,
                ctx.guild
            )
            member = ctx.message.author
            EconomicCogFunctionality.change_balance(
                self.cursor,
                self.conn,
                ctx.message.author,
                ctx.guild,
                balance,
                user_data
            )
            emb = discord.Embed(color = config.EMBED_COLOR, title=f'–ë–∞–ª–∞–Ω—Å {member}:', description = f'üíñ –ü–æ–ª—É—á–µ–Ω–æ `{balance}`üí∏!')
            await ctx.reply(embed = emb, mention_author=False)

    #—É—á–∏—Ç–µ–ª—å--------------------------------------------------------
    @commands.command(aliases = ['–®–∞—Ö—Ç—ë—Ä', '—à–∞—Ö—Ç—ë—Ä', '–®–∞—Ö—Ç–µ—Ä', '—à–∞—Ö—Ç–µ—Ä'])
    @commands.cooldown(1, 3600, commands.BucketType.member)
    async def doctor(self, ctx, balance = config.WORKER):
        user_data = EconomicCogFunctionality.get_user_data(
            self.cursor,
            self.conn,
            ctx.message.author,
            ctx.guild
        )
        users_balance = int(
                user_data[3]
            )
        if int(balance) + users_balance > 999999999999999999:
            emb = discord.Embed(colour=config.EMBED_COLOR_ERROR, title="‚ùå –û—à–∏–±–∫–∞:", description = '–ë—Ä–∞—Ç, –±—Ä–∞—Ç, –±—Ä–∞—Ç. –£ —Ç–µ–±—è –∏ —Ç–∞–∫ –º–Ω–æ–≥–æ –¥–µ–Ω–µ–≥!')
            await ctx.reply(embed = emb, mention_author=False)
        else:
            user_data = EconomicCogFunctionality.get_user_data(
                self.cursor,
                self.conn,
                ctx.message.author,
                ctx.guild
            )
            member = ctx.message.author
            EconomicCogFunctionality.change_balance(
                self.cursor,
                self.conn,
                ctx.message.author,
                ctx.guild,
                balance,
                user_data
            )
            emb = discord.Embed(color = config.EMBED_COLOR, title=f'–ë–∞–ª–∞–Ω—Å {member}:', description = f'üíñ –ü–æ–ª—É—á–µ–Ω–æ `{balance}`üí∏!')
            await ctx.reply(embed = emb, mention_author=False)

    #–ø–µ—Ä–µ–¥–∞—Ç—å-------------------------------------------------------------------
    @commands.command(aliases = ['–ü–µ—Ä–µ–¥–∞—Ç—å', '–ø–µ—Ä–µ–¥–∞—Ç—å'])
    async def send_gift(self, ctx, member: discord.Member, cash: int):
        user_data = EconomicCogFunctionality.get_user_data(
            self.cursor,
            self.conn,
            member,
            ctx.guild
        )
        users_balance = int(
                user_data[3]
            )
        if int(cash) + users_balance > 999999999999999999:
            emb = discord.Embed(colour=config.EMBED_COLOR_ERROR, title="‚ùå –û—à–∏–±–∫–∞:", description = '–ë—Ä–∞—Ç, –±—Ä–∞—Ç, –±—Ä–∞—Ç. –î–∞–≤–∞–π –Ω–µ —Ç–∞–∫ –º–Ω–æ–≥–æ, –æ–∫–µ–π?')
            await ctx.reply(embed = emb, mention_author=False)
        else:
            """
            :param ctx:
            :param member:
            :param cash:
            :return:
            """
            user_data = EconomicCogFunctionality.get_user_data(
                self.cursor,
                self.conn,
                ctx.message.author,
                ctx.guild
            )
            getter_balance = int(
                EconomicCogFunctionality.get_user_data(
                    self.cursor,
                    self.conn,
                    member,
                    ctx.guild
                )[3]
            )
            users_balance = int(
                user_data[3]
            )
            if int(cash) <= 0:
                emb = discord.Embed(colour=config.EMBED_COLOR_ERROR, title="‚ùå –û—à–∏–±–∫–∞:", description = '–°—É–º–º–∞ –≤–≤–æ–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ —á–µ–º `0`!')
                await ctx.reply(embed = emb, mention_author=False)
            else:
                if int(cash) > users_balance:
                    emb = discord.Embed(colour=config.EMBED_COLOR_ERROR, title="‚ùå –û—à–∏–±–∫–∞:", description = f'–£ –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!')
                    await ctx.reply(embed = emb, mention_author=False)
                else:
                    self.cursor.execute(
                        "UPDATE economic SET wallet_balance = ? WHERE member_id = ? AND guild_id = ?",
                        (
                            users_balance - int(cash),
                            ctx.message.author.id,
                            ctx.guild.id
                        )
                    )
                    self.cursor.execute(
                        "UPDATE economic SET wallet_balance = ? WHERE member_id = ? AND guild_id = ?",
                        (
                            getter_balance + int(cash),
                            member.id,
                            ctx.guild.id
                        )
                    )
                    self.conn.commit()
                    emb = discord.Embed(color = config.EMBED_COLOR, title=f'–ë–∞–ª–∞–Ω—Å {member}:', description = f'üíñ –ü–æ–ª—É—á–µ–Ω–æ `{cash}`üí∏!')
                    await ctx.reply(embed = emb, mention_author=False)

    #–∫–∞–∑–∏–Ω–æ-------------------------------------------------
    @commands.command(aliases=["–ö–∞–∑–∏–Ω–æ", "–∫–∞–∑–∏–Ω–æ", '–°—Ç–∞–≤–∫–∞', '—Å—Ç–∞–≤–∫–∞'])
    @commands.cooldown(2, 13, commands.BucketType.member)
    async def slot(self, ctx, balance: int):
        """
        :param ctx:
        :param member:
        :param balance:
        :return:
        """
        user_data = EconomicCogFunctionality.get_user_data(
            self.cursor,
            self.conn,
            ctx.message.author,
            ctx.guild
        )
        users_balance = int(
                user_data[3]
            )
        if int(balance)*3 + users_balance > 999999999999999999:
            emb = discord.Embed(colour=config.EMBED_COLOR_ERROR, title="‚ùå –û—à–∏–±–∫–∞:", description = '–ë—Ä–∞—Ç, –±—Ä–∞—Ç, –±—Ä–∞—Ç. –£ —Ç–µ–±—è –∏ —Ç–∞–∫ –º–Ω–æ–≥–æ –¥–µ–Ω–µ–≥!')
            await ctx.reply(embed = emb, mention_author=False)
        else:
            if int(balance) <= 0:
                emb = discord.Embed(colour=config.EMBED_COLOR_ERROR, title="‚ùå –û—à–∏–±–∫–∞:", description = '–°—É–º–º–∞ –≤–≤–æ–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ —á–µ–º `0`!')
                await ctx.reply(embed = emb, mention_author=False)
            else:
                member = ctx.message.author
                getter_balance = int(
                EconomicCogFunctionality.get_user_data(
                    self.cursor,
                    self.conn,
                    member,
                    ctx.guild
                )[3]
                )			
                user_data = EconomicCogFunctionality.get_user_data(
                    self.cursor,
                    self.conn,
                    ctx.message.author,
                    ctx.guild
                )
                users_balance = int(
                    user_data[3]
                )
                if int(balance) > users_balance:
                    emb = discord.Embed(colour=config.EMBED_COLOR_ERROR, title="‚ùå –û—à–∏–±–∫–∞:", description = f'–£ –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!')
                    await ctx.reply(embed = emb, mention_author=False)
                else:			
                    emojis = "üçéüçäüçêüçãüçâüçáüçìüçí"
                    a = random.choice(emojis)
                    b = random.choice(emojis)
                    c = random.choice(emojis)

                    slotmachine = f"**{a} {b} {c}**"

                    if (a == b == c):
                        user_data = EconomicCogFunctionality.get_user_data(
                            self.cursor,
                            self.conn,
                            ctx.message.author,
                            ctx.guild
                        )
                        member = ctx.message.author
                        EconomicCogFunctionality.change_balance(
                            self.cursor,
                            self.conn,
                            ctx.message.author,
                            ctx.guild,
                            balance *3,
                            user_data
                        )
                        emb = discord.Embed(color=config.EMBED_COLOR, description = f"{slotmachine}\n–í—ã—Ä—É—á–∫–∞: `{balance*4}` ‚ú®")
                        emb.set_footer(text = f'3/3 —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è!')
                        await ctx.reply(embed = emb, mention_author=False)
                    elif (a == b) or (a == c) or (b == c):
                        user_data = EconomicCogFunctionality.get_user_data(
                            self.cursor,
                            self.conn,
                            ctx.message.author,
                            ctx.guild
                        )
                        member = ctx.message.author
                        EconomicCogFunctionality.change_balance(
                            self.cursor,
                            self.conn,
                            ctx.message.author,
                            ctx.guild,
                            balance *2,
                            user_data
                        )
                        emb = discord.Embed(color=config.EMBED_COLOR, description = f"{slotmachine}\n–í—ã—Ä—É—á–∫–∞: `{balance*3}` üéâ")
                        emb.set_footer(text = f'2/3 —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è!')
                        await ctx.reply(embed = emb, mention_author=False)
                    else:
                        user_data = EconomicCogFunctionality.get_user_data(
                            self.cursor,
                            self.conn,
                            ctx.message.author,
                            ctx.guild
                        )

                        EconomicCogFunctionality.change_balance(
                            self.cursor,
                            self.conn,
                            ctx.message.author,
                            ctx.guild,
                            - balance,
                            user_data
                        )
                        emb = discord.Embed(color=config.EMBED_COLOR, description = f"{slotmachine}\n–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏! üò∂")
                        emb.set_footer(text = f'0/3 —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è!')
                        await ctx.reply(embed = emb, mention_author=False)

    #–ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞—Ç—å-------------------------------------------------
    @commands.command(aliases = ['–ü–æ–∂–µ—Ä—Ç–æ–≤–∞—Ç—å', '–ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞—Ç—å'])
    async def fond(self, ctx, balance: int):
        """
        :param ctx:
        :param balance:
        :return:
        """
        user_data = EconomicCogFunctionality.get_user_data(
            self.cursor,
            self.conn,
            ctx.message.author,
            ctx.guild
        )
        if int(balance) <= 0:
            emb = discord.Embed(colour=config.EMBED_COLOR_ERROR, title="‚ùå –û—à–∏–±–∫–∞:", description = '–°—É–º–º–∞ –≤–≤–æ–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ —á–µ–º `0`!')
            await ctx.reply(embed = emb, mention_author=False)
        else:
            if user_data[3] < int(balance):
                emb = discord.Embed(colour=config.EMBED_COLOR_ERROR, title="‚ùå –û—à–∏–±–∫–∞:", description = f'–£ –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!')
                await ctx.reply(embed = emb, mention_author=False)
            else:
                EconomicCogFunctionality.change_balance(
                    self.cursor,
                    self.conn,
                    ctx.message.author,
                    ctx.guild,
                    - balance,
                    user_data
                )
                emb = discord.Embed(color = config.EMBED_COLOR, title=f'–ë–∞–ª–∞–Ω—Å {ctx.author}:', description = f'üíñ –ü–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–ª `{balance}`üí∏!')
                await ctx.reply(embed = emb, mention_author=False)

    #–≤–º–∞–≥–∞–∑-------------------------------------------------
    @commands.has_permissions(administrator=True)
    @commands.command(aliases = ['–≤–º–∞–≥–∞–∑–∏–Ω', '–í–º–∞–≥–∞–∑–∏–Ω', '–í–º–∞–≥–∞–∑', '–≤–º–∞–≥–∞–∑'])
    async def add_shop_item(self, ctx, role: discord.Role, prise: int):
        """
        :param ctx:
        :param role:
        :param prise:
        :return:
        """
        if int(prise) <= 0:
            emb = discord.Embed(colour=config.EMBED_COLOR_ERROR, title="‚ùå –û—à–∏–±–∫–∞:", description = '–°—É–º–º–∞ –≤–≤–æ–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ —á–µ–º `0`!')
            await ctx.reply(embed = emb, mention_author=False)
        else:
            self.cursor.execute(
                "INSERT INTO economic_shop_item VALUES(?, ?, ?)",
                (
                    ctx.guild.id,
                    role.id,
                    prise
                )
            )
            self.conn.commit()
            emb = discord.Embed(color = config.EMBED_COLOR, title=f'–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞!', description = f'üíñ {role.mention} - `{prise}`üí∏!')
            await ctx.reply(embed = emb, mention_author=False)

    #–∏–∑–º–∞–≥–∞–∑–∞-------------------------------------------------
    @commands.has_permissions(administrator=True)
    @commands.command(aliases = ['–ò–∑–º–∞–≥–∞–∑–∏–Ω–∞', '–∏–∑–º–∞–≥–∞–∑–∏–Ω–∞', '–∏–∑–º–∞–≥–∞–∑–∞', '–ò–∑–º–∞–≥–∞–∑–∞'])
    async def del_shop_item(self, ctx, role: discord.Role):
        """
        :param ctx:
        :param role:
        :return:
        """
        self.cursor.execute(
            "DELETE FROM economic_shop_item WHERE guild_id = ? AND role_id = ?",
            (
                ctx.guild.id,
                role.id,
            )
        )
        self.conn.commit()
        emb = discord.Embed(color = config.EMBED_COLOR, title=f'–ò–∑—ä—è—Ç–∏–µ –∏–∑ –º–∞–≥–∞–∑–∏–Ω–∞!', description = f'üíî {role.mention}')
        await ctx.reply(embed = emb, mention_author=False)

    #–º–∞–≥–∞–∑-------------------------------------------------
    @commands.command(aliases = ['–ú–∞–≥–∞–∑–∏–Ω', '–º–∞–≥–∞–∑–∏–Ω', '–ú–∞–≥–∞–∑', '–º–∞–≥–∞–∑'])
    async def shop(self, ctx):
        prefix = self.get_prefix(self.cursor, ctx.message)
        """
        :param ctx:
        :return:
        """
        data = EconomicCogFunctionality.get_all_shop_items(
            self.cursor,
            ctx.guild
        )
        data.reverse()
        emb = discord.Embed(color = config.EMBED_COLOR, title="–ú–∞–≥–∞–∑–∏–Ω —Ä–æ–ª–µ–π:")
        for item in data:
            emb.add_field(name='–†–æ–ª—å:', value=f"{ctx.guild.get_role(item[1]).mention} - `{item[2]}`", inline=False)
            emb.set_footer(text = f'‚ùì –ö—É–ø–∏—Ç—å {prefix}–∫—É–ø–∏—Ç—å @—Ä–æ–ª—å')
        await ctx.send(embed = emb)

    #–∫—É–ø–∏—Ç—å------------------------------------------------
    @commands.command(aliases = ['–ö—É–ø–∏—Ç—å', '–∫—É–ø–∏—Ç—å'])
    async def buy(self, ctx, role: discord.Role):
        """
        :param ctx:
        :param role:
        :return:
        """
        data = EconomicCogFunctionality.get_all_shop_items(
            self.cursor,
            ctx.guild
        )
        role_exists = False
        balance = 0
        for item in data:
            if item[1] == role.id:
                role_exists = True
                balance = item[2]
                break
        member = ctx.message.author
        if not role_exists:
            emb = discord.Embed(colour=config.EMBED_COLOR_ERROR, title="‚ùå –û—à–∏–±–∫–∞:", description = f'–î–∞–Ω–Ω–æ–π —Ä–æ–ª–∏ –Ω–µ—Ç –≤ –º–∞–≥–∞–∑–∏–Ω–µ!')
            await ctx.reply(embed = emb, mention_author=False)
        else:
            user_data = EconomicCogFunctionality.get_user_data(self.cursor, self.conn, ctx.message.author, ctx.guild)
            if user_data[3] < int(balance):
                emb = discord.Embed(colour=config.EMBED_COLOR_ERROR, title="‚ùå –û—à–∏–±–∫–∞:", description = f'–£ –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!')
                await ctx.reply(embed = emb, mention_author=False)
            else:
                EconomicCogFunctionality.change_balance(
                    self.cursor,
                    self.conn,
                    member,
                    ctx.guild,
                    - balance,
                    user_data
                )
                await ctx.message.author.add_roles(role)
                emb = discord.Embed(color = config.EMBED_COLOR, title=f'–ê–∫–∫–∞—É–Ω—Ç {ctx.author}:', description = f'üíñ –ö—É–ø–∏–ª {role.mention} –∑–∞ `{balance}`üí∏!')
                await ctx.reply(embed = emb, mention_author=False)

def setup(client):
    """
    :param client:
    :return:
    """
    client.add_cog(EconomyCog(client))

